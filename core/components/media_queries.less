// ========================================================================================================================================================================
// ==                                   ===================================================================================================================================
// ==               GLOBAL              ===================================================================================================================================
// ==             RESPONSIVE            ===================================================================================================================================
// ==               RULES               ===================================================================================================================================
// ==                                   ===================================================================================================================================
// ========================================================================================================================================================================

.addViewportsSteps(@selector:use-steps, @hdFullMargin:500px, @hdReadyMargin:100px, @tabletLandscapeMargin:50px, @tabletPortraitMargin:20px) {
    // Media queries for selectors active from a specific resolution or higher
    // smartphone viewports were removed to improve width compatibility with all smartphone models
    .addStep(@selector);
    .addViewportsStepsTabletPortrait(@selector, @tabletPortraitMargin);
    .addViewportsStepsTabletLandscape(@selector, @tabletLandscapeMargin);
    .addViewportsStepsHdReady(@selector, @hdReadyMargin);
    .addViewportsStepsHdFull(@selector, @hdFullMargin);
}
.addViewportsStepsTabletPortrait(@selector, @tabletPortraitMargin) when (@use-tablet-portrait = true) {
    @media @from-tablet-portrait {
        // Tablet portrait
        .@{selector} {
            max-width: (@tablet-portrait-step - @tabletPortraitMargin);
        }
    }
}
.addViewportsStepsTabletLandscape(@selector, @tabletLandscapeMargin) when (@use-tablet-landscape = true) {
    @media @from-tablet-landscape {
        // Tablet landscape
        .@{selector} {
            max-width: (@tablet-landscape-step - @tabletLandscapeMargin);
        }
    }
}
.addViewportsStepsHdReady(@selector, @hdReadyMargin) when (@use-hd-ready = true) {
    @media @from-hd-ready {
        // HD Ready
        .@{selector} {
            max-width: (@hd-ready-step - @hdReadyMargin);
        }
    }
}
.addViewportsStepsHdFull(@selector, @hdFullMargin) when (@use-hd-full = true) {
    @media @from-hd-full {
        // Full HD
        .@{selector} {
            max-width: (@hd-full-step - @hdFullMargin);
        }
    }
}

.setFontScaling(@hdFull:(@font-size + (@font-size/2)), @hdReady:(@font-size + (@font-size/4)), @tabletLandscape:@font-size, @tabletPortrait:@font-size, @smartphoneLandscape:@font-size, @smartphonePortrait:@font-size, @lineHeightMultiplier:@font-line-height) {
    // Media queries for selectors active from a specific resolution or higher
    .setFontScalingSmartphonePortrait(@smartphonePortrait, @lineHeightMultiplier);
    .setFontScalingSmartphoneLandscape(@smartphoneLandscape, @lineHeightMultiplier);
    .setFontScalingTabletPortrait(@tabletPortrait, @lineHeightMultiplier);
    .setFontScalingTabletLandscape(@tabletLandscape, @lineHeightMultiplier);
    .setFontScalingHdReady(@hdReady, @lineHeightMultiplier);
    .setFontScalingHdFull(@hdFull, @lineHeightMultiplier);
}
.setFontScalingSmartphonePortrait(@smartphonePortrait, @lineHeightMultiplier) when (@use-smartphone-portrait = true) {
    @media @from-smartphone-portrait {
        // Smartphone portrait
        body {
            font-size: @smartphonePortrait;
            line-height: @lineHeightMultiplier;
        }
    }
}
.setFontScalingSmartphoneLandscape(@smartphoneLandscape, @lineHeightMultiplier) when (@use-smartphone-landscape = true) {
    @media @from-smartphone-landscape {
        // Smartphone landscape
        body {
            font-size: @smartphoneLandscape;
            line-height: @lineHeightMultiplier;
        }
    }
}
.setFontScalingTabletPortrait(@tabletPortrait, @lineHeightMultiplier) when (@use-tablet-portrait = true) {
    @media @from-tablet-portrait {
        // Tablet portrait
        body {
            font-size:@tabletPortrait;
            line-height: @lineHeightMultiplier;
        }
    }
}
.setFontScalingTabletLandscape(@tabletLandscape, @lineHeightMultiplier) when (@use-tablet-landscape = true) {
    @media @from-tablet-landscape {
        // Tablet landscape
        body {
            font-size:@tabletLandscape;
            line-height: @lineHeightMultiplier;
        }
    }
}
.setFontScalingHdReady(@hdReady, @lineHeightMultiplier) when (@use-hd-ready = true) {
    @media @from-hd-ready {
        // HD Ready
        body {
            font-size:@hdReady;
            line-height: @lineHeightMultiplier;
        }
    }
}
.setFontScalingHdFull(@hdFull, @lineHeightMultiplier) when (@use-hd-full = true) {
    @media @from-hd-full {
        // Full HD
        body {
            font-size:@hdFull;
            line-height: @lineHeightMultiplier;
        }
    }
}

.addFontsRule(@selector:with-small-fonts, @fontFamilyHd:@font-small, @fontSizeHd:0.75em, @antialiasHd:antialiased, @fontFamilyTablet:@font-small, @fontSizeTablet:0.75em, @antialiasTablet:antialiased, @fontFamilySmartphone:@font-small, @fontSizeSmartphone:0.85em, @antialiasSmartphone:subpixel-antialiased) {
    // Media queries for selectors active from a specific resolution or higher
    .addFontsRuleHdReady(@selector, @fontFamilyHd, @fontSizeHd, @antialiasHd);
    .addFontsRuleHdFull(@selector, @fontFamilyHd, @fontSizeHd, @antialiasHd);
    .addFontsRuleTabletPortrait(@selector, @fontFamilyTablet, @fontSizeTablet, @antialiasTablet);
    .addFontsRuleTabletLandscape(@selector, @fontFamilyTablet, @fontSizeTablet, @antialiasTablet);
    .addFontsRuleSmartphonePortrait(@selector, @fontFamilySmartphone, @fontSizeSmartphone, @antialiasSmartphone);
    .addFontsRuleSmartphoneLandscape(@selector, @fontFamilySmartphone, @fontSizeSmartphone, @antialiasSmartphone);
}
.addFontsRuleHdReady(@selector, @fontFamilyHd, @fontSizeHd, @antialiasHd) when (@use-hd-ready = true) {
    @media @from-hd-ready {
        // HD Ready
        .@{selector} {
            font-family:@fontFamilyHd;
            font-size:@fontSizeHd;
            .font-smoothing(@antialiasHd);
        }
    }
}
.addFontsRuleHdFull(@selector, @fontFamilyHd, @fontSizeHd, @antialiasHd) when (@use-hd-full = true) {
    @media @from-hd-full {
        // Full HD
        .@{selector} {
            font-family:@fontFamilyHd;
            font-size:@fontSizeHd;
            .font-smoothing(@antialiasHd);
        }
    }
}
.addFontsRuleTabletPortrait(@selector, @fontFamilyTablet, @fontSizeTablet, @antialiasTablet) when (@use-tablet-portrait = true) {
    @media @from-tablet-portrait {
        // Tablet portrait
        .@{selector} {
            font-family:@fontFamilyTablet;
            font-size:@fontSizeTablet;
            .font-smoothing(@antialiasTablet);
        }
    }
}
.addFontsRuleTabletLandscape(@selector, @fontFamilyTablet, @fontSizeTablet, @antialiasTablet) when (@use-tablet-landscape = true) {
    @media @from-tablet-landscape {
        // Tablet landscape
        .@{selector} {
            font-family:@fontFamilyTablet;
            font-size:@fontSizeTablet;
            .font-smoothing(@antialiasTablet);
        }
    }
}
.addFontsRuleSmartphonePortrait(@selector, @fontFamilySmartphone, @fontSizeSmartphone, @antialiasSmartphone) when (@use-smartphone-portrait = true) {
    @media @from-smartphone-portrait {
        // Smartphone portrait
        .@{selector} {
            font-family:@fontFamilySmartphone;
            font-size:@fontSizeSmartphone;
            .font-smoothing(@antialiasSmartphone);
        }
    }
}
.addFontsRuleSmartphoneLandscape(@selector, @fontFamilySmartphone, @fontSizeSmartphone, @antialiasSmartphone) when (@use-smartphone-landscape = true) {
    @media @from-smartphone-landscape {
        // Smartphone landscape
        .@{selector} {
            font-family:@fontFamilySmartphone;
            font-size:@fontSizeSmartphone;
            .font-smoothing(@antialiasSmartphone);
        }
    }
}

.setHeadingFont(@hdFullFontSize:1.5em, @hdReadyFontSize:1.25em, @tabletLandscapeFontSize:1.125em, @tabletPortraitFontSize:1.125em, @smartphoneLandscapeFontSize:1em, @smartphonePortraitFontSize:1em) {
    // Media queries for selectors active from a specific resolution or higher
    .setHeadingFontSmartphonePortrait(@smartphonePortraitFontSize);
    .setHeadingFontSmartphoneLandscape(@smartphoneLandscapeFontSize);
    .setHeadingFontTabletPortrait(@tabletPortraitFontSize);
    .setHeadingFontTabletLandscape(@tabletLandscapeFontSize);
    .setHeadingFontHdReady(@hdReadyFontSize);
    .setHeadingFontHdFull(@hdFullFontSize);
}

.setHeadingFontSmartphonePortrait(@smartphonePortraitFontSize) when (@use-smartphone-portrait = true) {
    @media @from-smartphone-portrait {
        // Smartphone portrait
        h1 {
            font-size: (@h1 * @smartphonePortraitFontSize);
        }
        h2 {
            font-size: (@h2 * @smartphonePortraitFontSize);
        }
        h3 {
            font-size: (@h3 * @smartphonePortraitFontSize);
        }
        h4 {
            font-size: (@h4 * @smartphonePortraitFontSize);
        }
        h5 {
            font-size: (@h5 * @smartphonePortraitFontSize);
        }
        h6 {
            font-size: (@h6 * @smartphonePortraitFontSize);
        }
        h1, h2, h3, h4, h5, h6 {
            margin-bottom: (@smartphonePortraitFontSize / 4);
        }
    }
}
.setHeadingFontSmartphoneLandscape(@smartphoneLandscapeFontSize) when (@use-smartphone-landscape = true) {
    @media @from-smartphone-landscape {
        // Smartphone landscape
        h1 {
            font-size: (@h1 * @smartphoneLandscapeFontSize);
        }
        h2 {
            font-size: (@h2 * @smartphoneLandscapeFontSize);
        }
        h3 {
            font-size: (@h3 * @smartphoneLandscapeFontSize);
        }
        h4 {
            font-size: (@h4 * @smartphoneLandscapeFontSize);
        }
        h5 {
            font-size: (@h5 * @smartphoneLandscapeFontSize);
        }
        h6 {
            font-size: (@h6 * @smartphoneLandscapeFontSize);
        }
        h1, h2, h3, h4, h5, h6 {
            margin-bottom: (@smartphoneLandscapeFontSize / 4);
        }
    }
}
.setHeadingFontTabletPortrait(@tabletPortraitFontSize) when (@use-tablet-portrait = true) {
    @media @from-tablet-portrait {
        // Tablet portrait
        h1 {
            font-size: (@h1 * @tabletPortraitFontSize);
        }
        h2 {
            font-size: (@h2 * @tabletPortraitFontSize);
        }
        h3 {
            font-size: (@h3 * @tabletPortraitFontSize);
        }
        h4 {
            font-size: (@h4 * @tabletPortraitFontSize);
        }
        h5 {
            font-size: (@h5 * @tabletPortraitFontSize);
        }
        h6 {
            font-size: (@h6 * @tabletPortraitFontSize);
        }
        h1, h2, h3, h4, h5, h6 {
            margin-bottom: (@tabletPortraitFontSize / 4);
        }
    }
}
.setHeadingFontTabletLandscape(@tabletLandscapeFontSize) when (@use-tablet-landscape = true) {
    @media @from-tablet-landscape {
        // Tablet landscape
        h1 {
            font-size: (@h1 * @tabletLandscapeFontSize);
        }
        h2 {
            font-size: (@h2 * @tabletLandscapeFontSize);
        }
        h3 {
            font-size: (@h3 * @tabletLandscapeFontSize);
        }
        h4 {
            font-size: (@h4 * @tabletLandscapeFontSize);
        }
        h5 {
            font-size: (@h5 * @tabletLandscapeFontSize);
        }
        h6 {
            font-size: (@h6 * @tabletLandscapeFontSize);
        }
        h1, h2, h3, h4, h5, h6 {
            margin-bottom: (@tabletLandscapeFontSize / 4);
        }
    }
}
.setHeadingFontHdReady(@hdReadyFontSize) when (@use-hd-ready = true) {
    @media @from-hd-ready {
        // HD Ready
        h1 {
            font-size: (@h1 * @hdReadyFontSize);
        }
        h2 {
            font-size: (@h2 * @hdReadyFontSize);
        }
        h3 {
            font-size: (@h3 * @hdReadyFontSize);
        }
        h4 {
            font-size: (@h4 * @hdReadyFontSize);
        }
        h5 {
            font-size: (@h5 * @hdReadyFontSize);
        }
        h6 {
            font-size: (@h6 * @hdReadyFontSize);
        }
        h1, h2, h3, h4, h5, h6 {
            margin-bottom: (@hdReadyFontSize / 4);
        }
    }
}
.setHeadingFontHdFull(@hdFullFontSize) when (@use-hd-full = true) {
    @media @from-hd-full {
        // Full HD
        h1 {
            font-size: (@h1 * @hdFullFontSize);
        }
        h2 {
            font-size: (@h2 * @hdFullFontSize);
        }
        h3 {
            font-size: (@h3 * @hdFullFontSize);
        }
        h4 {
            font-size: (@h4 * @hdFullFontSize);
        }
        h5 {
            font-size: (@h5 * @hdFullFontSize);
        }
        h6 {
            font-size: (@h6 * @hdFullFontSize);
        }
        h1, h2, h3, h4, h5, h6 {
            margin-bottom: (@hdFullFontSize / 4);
        }
    }
}

// ========================================================================================================================================================================
// ==                                   ===================================================================================================================================
// ==             RESPONSIVE            ===================================================================================================================================
// ==               RULES               ===================================================================================================================================
// ==                                   ===================================================================================================================================
// ========================================================================================================================================================================

.addFontRule(@selector, @fontFamily:@font-default, @hdFullFontSize:1em, @hdReadyFontSize:1em, @tabletLandscapeFontSize:1em, @tabletPortraitFontSize:1em, @smartphoneLandscapeFontSize:1em, @smartphonePortraitFontSize:1em, @antialias:antialiased, @lineHeightMultiplier:1.225) {
    // Media queries for selectors active from the smaller resolution to a specific one
    .@{selector} {
        font-family:@fontFamily;
        line-height:@lineHeightMultiplier;
        .font-smoothing(@antialias);
    }
    .addFontRuleHdFull(@selector, @hdFullFontSize);
    .addFontRuleHdReady(@selector, @hdReadyFontSize);
    .addFontRuleTabletLandscape(@selector, @tabletLandscapeFontSize);
    .addFontRuleTabletPortrait(@selector, @tabletPortraitFontSize);
    .addFontRuleSmartphoneLandscape(@selector, @smartphoneLandscapeFontSize);
    .addFontRuleSmartphonePortrait(@selector, @smartphonePortraitFontSize);
}
.addFontRuleHdFull(@selector, @hdFullFontSize) when (@use-hd-full = true) {
    @media @from-hd-full {
        // Full HD
        .@{selector} {
            font-size:@hdFullFontSize !important;
        }
    }
}
.addFontRuleHdReady(@selector, @hdReadyFontSize) when (@use-hd-ready = true) {
    @media @till-hd-full {
        // HD Ready
        .@{selector} {
            font-size:@hdReadyFontSize !important;
        }
    }
}
.addFontRuleTabletLandscape(@selector, @tabletLandscapeFontSize) when (@use-tablet-landscape = true) {
    @media @till-hd-ready {
        // Tablet landscape
        .@{selector} {
            font-size:@tabletLandscapeFontSize !important;
        }
    }
}
.addFontRuleTabletPortrait(@selector, @tabletPortraitFontSize) when (@use-tablet-portrait = true) {
    @media @till-tablet-landscape {
        // Tablet portrait
        .@{selector} {
            font-size:@tabletPortraitFontSize !important;
        }
    }
}
.addFontRuleSmartphoneLandscape(@selector, @smartphoneLandscapeFontSize) when (@use-smartphone-landscape = true) {
    @media @till-tablet-portrait {
        // Smartphone landscape
        .@{selector} {
            font-size:@smartphoneLandscapeFontSize !important;
        }
    }
}
.addFontRuleSmartphonePortrait(@selector, @smartphonePortraitFontSize) when (@use-smartphone-portrait = true) {
    @media @till-smartphone-landscape {
        // Smartphone portrait
        .@{selector} {
            font-size:@smartphonePortraitFontSize !important;
        }
    }
}


.addContainerRow(@selector:row, @hdFullSteps:0, @hdReadySteps:12, @tabletLandscapeSteps:6, @tabletPortraitSteps:3, @smartphoneLandscapeSteps:1, @smartphonePortraitSteps:1) {
    .@{selector},
    .@{selector} *,
    .@{selector} > * {
        .box-sizing(border-box);
    }
    .@{selector} {
        padding-top:@vertical-padding;
        width:100%;
        overflow:auto;
        clear:both;
    }
    .checkAutoClear(@hdFullSteps, @hdReadySteps, @tabletLandscapeSteps, @tabletPortraitSteps, @smartphoneLandscapeSteps, @smartphonePortraitSteps, @selector);
}

.checkAutoClear(@hdFullSteps, @hdReadySteps, @tabletLandscapeSteps, @tabletPortraitSteps, @smartphoneLandscapeSteps, @smartphonePortraitSteps, @selector) when (@hdFullSteps > 0) {
    // Media queries for selectors active from a specific resolution or higher
    .@{selector} > * {
        min-height: 1px;
        //padding-bottom:@vertical-padding;
        .setColumnBehavior();
        .setColumnStep(1, @hdFullSteps);
    }
    .checkAutoClearSmartphonePortrait(@selector, @smartphonePortraitSteps);
    .checkAutoClearSmartphoneLandscape(@selector, @smartphoneLandscapeSteps);
    .checkAutoClearTabletPortrait(@selector, @tabletPortraitSteps);
    .checkAutoClearTabletLandscape(@selector, @tabletLandscapeSteps);
    .checkAutoClearHdReady(@selector, @hdReadySteps);
    .checkAutoClearHdFull(@selector, @hdFullSteps);
}
.checkAutoClearSmartphonePortrait(@selector, @smartphonePortraitSteps) when (@use-smartphone-portrait = true) {
    @media @only-smartphone-portrait {
        // Smartphone portrait
        .@{selector} > * {
            .setColumns(@smartphonePortraitSteps);
        }
    }
}
.checkAutoClearSmartphoneLandscape(@selector, @smartphoneLandscapeSteps) when (@use-smartphone-landscape = true) {
    @media @only-smartphone-landscape {
        // Smartphone landscape
        .@{selector} > * {
            .setColumns(@smartphoneLandscapeSteps);
        }
    }
}
.checkAutoClearTabletPortrait(@selector, @tabletPortraitSteps) when (@use-tablet-portrait = true) {
    @media @only-tablet-portrait {
        // Tablet portrait
        .@{selector} > * {
            .setColumns(@tabletPortraitSteps);
        }
    }
}
.checkAutoClearTabletLandscape(@selector, @tabletLandscapeSteps) when (@use-tablet-landscape = true) {
    @media @only-tablet-landscape {
        // Tablet landscape
        .@{selector} > * {
            .setColumns(@tabletLandscapeSteps);
        }
    }
}
.checkAutoClearHdReady(@selector, @hdReadySteps) when (@use-hd-ready = true) {
    @media @only-hd-ready {
        // HD Ready
        .@{selector} > * {
            .setColumns(@hdReadySteps);
        }
    }
}
.checkAutoClearHdFull(@selector, @hdFullSteps) when (@use-hd-full = true) {
    @media @only-hd-full {
        // Full HD
        .@{selector} > * {
            .setColumns(@hdFullSteps);
        }
    }
}

.addPaddingRule(@selector, @hdFullPadding:6em, @hdReadyPadding:5em, @tabletLandscapePadding:4em, @tabletPortraitPadding:3em, @smartphoneLandscapePadding:2em, @smartphonePortraitPadding:1em) {
    // Media queries for selectors active from a specific resolution or higher
    .addPaddingRuleSmartphonePortrait(@selector, @smartphonePortraitPadding);
    .addPaddingRuleSmartphoneLandscape(@selector, @smartphoneLandscapePadding);
    .addPaddingRuleTabletPortrait(@selector, @tabletPortraitPadding);
    .addPaddingRuleTabletLandscape(@selector, @tabletLandscapePadding);
    .addPaddingRuleHdReady(@selector, @hdReadyPadding);
    .addPaddingRuleHdFull(@selector, @hdFullPadding);
}
.addPaddingRuleSmartphonePortrait(@selector, @smartphonePortraitPadding) when (@use-smartphone-portrait = true) {
    @media @from-smartphone-portrait {
        // Smartphone portrait
        .@{selector} { padding:@smartphonePortraitPadding; }
    }
}
.addPaddingRuleSmartphoneLandscape(@selector, @smartphoneLandscapePadding) when (@use-smartphone-landscape = true) {
    @media @from-smartphone-landscape {
        // Smartphone landscape
        .@{selector} { padding:@smartphoneLandscapePadding; }
    }
}
.addPaddingRuleTabletPortrait(@selector, @tabletPortraitPadding) when (@use-tablet-portrait = true) {
    @media @from-tablet-portrait {
        // Tablet portrait
        .@{selector} { padding:@tabletPortraitPadding; }
    }
}
.addPaddingRuleTabletLandscape(@selector, @tabletLandscapePadding) when (@use-tablet-landscape = true) {
    @media @from-tablet-landscape {
        // Tablet landscape
        .@{selector} { padding:@tabletLandscapePadding; }
    }
}
.addPaddingRuleHdReady(@selector, @hdReadyPadding) when (@use-hd-ready = true) {
    @media @from-hd-ready {
        // HD Ready
        .@{selector} { padding:@hdReadyPadding; }
    }
}
.addPaddingRuleHdFull(@selector, @hdFullPadding) when (@use-hd-full = true) {
    @media @from-hd-full {
        // Full HD
        .@{selector} { padding:@hdFullPadding; }
    }
}

.addMarginRule(@selector, @hdFullMargin:6em, @hdReadyMargin:5em, @tabletLandscapeMargin:4em, @tabletPortraitMargin:3em, @smartphoneLandscapeMargin:2em, @smartphonePortraitMargin:1em) {
    // Media queries for selectors active from a specific resolution or higher
    .addMarginRuleSmartphonePortrait(@selector, @smartphonePortraitMargin);
    .addMarginRuleSmartphoneLandscape(@selector, @smartphoneLandscapeMargin);
    .addMarginRuleTabletPortrait(@selector, @tabletPortraitMargin);
    .addMarginRuleTabletLandscape(@selector, @tabletLandscapeMargin);
    .addMarginRuleHdReady(@selector, @hdReadyMargin);
    .addMarginRuleHdFull(@selector, @hdFullMargin);
}
.addMarginRuleSmartphonePortrait(@selector, @smartphonePortraitMargin) when (@use-smartphone-portrait = true) {
    @media @from-smartphone-portrait {
        // Smartphone portrait
        .@{selector} { margin:@smartphonePortraitMargin; }
    }
}
.addMarginRuleSmartphoneLandscape(@selector, @smartphoneLandscapeMargin) when (@use-smartphone-landscape = true) {
    @media @from-smartphone-landscape {
        // Smartphone landscape
        .@{selector} { margin:@smartphoneLandscapeMargin; }
    }
}
.addMarginRuleTabletPortrait(@selector, @tabletPortraitMargin) when (@use-tablet-portrait = true) {
    @media @from-tablet-portrait {
        // Tablet portrait
        .@{selector} { margin:@tabletPortraitMargin; }
    }
}
.addMarginRuleTabletLandscape(@selector, @tabletLandscapeMargin) when (@use-tablet-landscape = true) {
    @media @from-tablet-landscape {
        // Tablet landscape
        .@{selector} { margin:@tabletLandscapeMargin; }
    }
}
.addMarginRuleHdReady(@selector, @hdReadyMargin) when (@use-hd-ready = true) {
    @media @from-hd-ready {
        // HD Ready
        .@{selector} { margin:@hdReadyMargin; }
    }
}
.addMarginRuleHdFull(@selector, @hdFullMargin) when (@use-hd-full = true) {
    @media @from-hd-full {
        // Full HD
        .@{selector} { margin:@hdFullMargin; }
    }
}

// ========================================================================================================================================================================
// ==                                   ===================================================================================================================================
// ==             FRONTSIZE             ===================================================================================================================================
// ==          VISIBILITY RULES         ===================================================================================================================================
// ==                                   ===================================================================================================================================
// ========================================================================================================================================================================

.setViewportsPadding(@hdFullPadding:6em, @hdReadyPadding:5em, @tabletLandscapePadding:4em, @tabletPortraitPadding:3em, @smartphoneLandscapePadding:2em, @smartphonePortraitPadding:1em) {
    // Media queries for selectors active from a specific resolution or higher
    .setViewportsPaddingSmartphonePortrait(@smartphonePortraitPadding);
    .setViewportsPaddingSmartphoneLandscape(@smartphoneLandscapePadding);
    .setViewportsPaddingTabletPortrait(@tabletPortraitPadding);
    .setViewportsPaddingTabletLandscape(@tabletLandscapePadding);
    .setViewportsPaddingHdReady(@hdReadyPadding);
    .setViewportsPaddingHdFull(@hdFullPadding);
}
.setViewportsPaddingSmartphonePortrait(@smartphonePortraitPadding) when (@use-smartphone-portrait = true) {
    @media @from-smartphone-portrait {
        // Smartphone portrait
        padding:@smartphonePortraitPadding;
    }
}
.setViewportsPaddingSmartphoneLandscape(@smartphoneLandscapePadding) when (@use-smartphone-landscape = true) {
    @media @from-smartphone-landscape {
        // Smartphone landscape
        padding:@smartphoneLandscapePadding;
    }
}
.setViewportsPaddingTabletPortrait(@tabletPortraitPadding) when (@use-tablet-portrait = true) {
    @media @from-tablet-portrait {
        // Tablet portrait
        padding:@tabletPortraitPadding;
    }
}
.setViewportsPaddingTabletLandscape(@tabletLandscapePadding) when (@use-tablet-landscape = true) {
    @media @from-tablet-landscape {
        // Tablet landscape
        padding:@tabletLandscapePadding;
    }
}
.setViewportsPaddingHdReady(@hdReadyPadding) when (@use-hd-ready = true) {
    @media @from-hd-ready {
        // HD Ready
        padding:@hdReadyPadding;
    }
}
.setViewportsPaddingHdFull(@hdFullPadding) when (@use-hd-full = true) {
    @media @from-hd-full {
        // Full HD
        padding:@hdFullPadding;
    }
}

.setViewportsMargin(@hdFullMargin:6em, @hdReadyMargin:5em, @tabletLandscapeMargin:4em, @tabletPortraitMargin:3em, @smartphoneLandscapeMargin:2em, @smartphonePortraitMargin:1em) {
    // Media queries for selectors active from a specific resolution or higher
    .setViewportsMarginSmartphonePortrait(@smartphonePortraitMargin);
    .setViewportsMarginSmartphoneLandscape(@smartphoneLandscapeMargin);
    .setViewportsMarginTabletPortrait(@tabletPortraitMargin);
    .setViewportsMarginTabletLandscape(@tabletLandscapeMargin);
    .setViewportsMarginHdReady(@hdReadyMargin);
    .setViewportsMarginHdFull(@hdFullMargin);
}
.setViewportsMarginSmartphonePortrait(@smartphonePortraitMargin) when (@use-smartphone-portrait = true) {
    @media @from-smartphone-portrait {
        // Smartphone portrait
        margin:@smartphonePortraitMargin;
    }
}
.setViewportsMarginSmartphoneLandscape(@smartphoneLandscapeMargin) when (@use-smartphone-landscape = true) {
    @media @from-smartphone-landscape {
        // Smartphone landscape
        margin:@smartphoneLandscapeMargin;
    }
}
.setViewportsMarginTabletPortrait(@tabletPortraitMargin) when (@use-tablet-portrait = true) {
    @media @from-tablet-portrait {
        // Tablet portrait
        margin:@tabletPortraitMargin;
    }
}
.setViewportsMarginTabletLandscape(@tabletLandscapeMargin) when (@use-tablet-landscape = true) {
    @media @from-tablet-landscape {
        // Tablet landscape
        margin:@tabletLandscapeMargin;
    }
}
.setViewportsMarginHdReady(@hdReadyMargin) when (@use-hd-ready = true) {
    @media @from-hd-ready {
        // HD Ready
        margin:@hdReadyMargin;
    }
}
.setViewportsMarginHdFull(@hdFullMargin) when (@use-hd-full = true) {
    @media @from-hd-full {
        // Full HD
        margin:@hdFullMargin;
    }
}

.setViewportsFontSize(@hdFullFontSize:1em, @hdReadyFontSize:1em, @tabletLandscapeFontSize:1em, @tabletPortraitFontSize:1em, @smartphoneLandscapeFontSize:1em, @smartphonePortraitFontSize:1em, @lineHeightMultiplier:@font-line-height) {
    // Media queries for selectors active from the smaller resolution to a specific one
    line-height:@lineHeightMultiplier;
    .setViewportsFontSizeHdFull(@hdFullFontSize);
    .setViewportsFontSizeHdReady(@hdReadyFontSize);
    .setViewportsFontSizeTabletLandscape(@tabletLandscapeFontSize);
    .setViewportsFontSizeTabletPortrait(@tabletPortraitFontSize);
    .setViewportsFontSizeSmartphoneLandscape(@smartphoneLandscapeFontSize);
    .setViewportsFontSizeSmartphonePortrait(@smartphonePortraitFontSize);
}
.setViewportsFontSizeHdFull(@hdFullFontSize) when (@use-hd-full = true) {
    @media @from-hd-full {
        // Full HD
        font-size:@hdFullFontSize !important;
    }
}
.setViewportsFontSizeHdReady(@hdReadyFontSize) when (@use-hd-ready = true) {
    @media @till-hd-full {
        // HD Ready
        font-size:@hdReadyFontSize !important;
    }
}
.setViewportsFontSizeTabletLandscape(@tabletLandscapeFontSize) when (@use-tablet-landscape = true) {
    @media @till-hd-ready {
        // Tablet landscape
        font-size:@tabletLandscapeFontSize !important;
    }
}
.setViewportsFontSizeTabletPortrait(@tabletPortraitFontSize) when (@use-tablet-portrait = true) {
    @media @till-tablet-landscape {
        // Tablet portrait
        font-size:@tabletPortraitFontSize !important;
    }
}
.setViewportsFontSizeSmartphoneLandscape(@smartphoneLandscapeFontSize) when (@use-smartphone-landscape = true) {
    @media @till-tablet-portrait {
        // Smartphone landscape
        font-size:@smartphoneLandscapeFontSize !important;
    }
}
.setViewportsFontSizeSmartphonePortrait(@smartphonePortraitFontSize) when (@use-smartphone-portrait = true) {
    @media @till-smartphone-landscape {
        // Smartphone portrait
        font-size:@smartphonePortraitFontSize !important;
    }
}

.addColumnsSet(@steps:12, @hdViewportPrefix:hd-, @tabletViewportPrefix:tablet-, @smartphoneViewportPrefix:smartphone-, @fillFromViewport:"smartphone-landscape", @viewTotalColumns:true, @columnsSeparator:-of-, @useHdRules:true, @useTabletRules:true, @useSmartphoneRules:true) {
    .addColumnsSetSmartphonePortrait(@steps, @hdViewportPrefix, @tabletViewportPrefix, @smartphoneViewportPrefix, @viewTotalColumns, @columnsSeparator, @useSmartphoneRules);
    .addColumnsSetTabletPortrait(@steps, @hdViewportPrefix, @tabletViewportPrefix, @smartphoneViewportPrefix, @viewTotalColumns, @columnsSeparator, @useTabletRules);
    .addColumnsSetHdReady(@steps, @hdViewportPrefix, @tabletViewportPrefix, @smartphoneViewportPrefix, @viewTotalColumns, @columnsSeparator, @useHdRules);
    .addFillToColumnSet(@tabletViewportPrefix, @steps, @fillFromViewport, @viewTotalColumns, @columnsSeparator);
    .addFillToColumnSet(@hdViewportPrefix, @steps, @fillFromViewport, @viewTotalColumns, @columnsSeparator);
    .preventSmartphoneColumnSet(@smartphoneViewportPrefix, @steps, @viewTotalColumns, @columnsSeparator);
}

.addColumnsSetSmartphonePortrait(@steps, @hdViewportPrefix, @tabletViewportPrefix, @smartphoneViewportPrefix, @viewTotalColumns, @columnsSeparator, @useSmartphoneRules) when (@useSmartphoneRules = true) {
    @media @from-smartphone-portrait {
        // Smartphone portrait
        .addColumnSet(@hdViewportPrefix, @steps, @viewTotalColumns, @columnsSeparator);
        .addColumnSet(@tabletViewportPrefix, @steps, @viewTotalColumns, @columnsSeparator);
        .addColumnSet(@smartphoneViewportPrefix, @steps, @viewTotalColumns, @columnsSeparator);
    }
}
.addColumnsSetTabletPortrait(@steps, @hdViewportPrefix, @tabletViewportPrefix, @smartphoneViewportPrefix, @viewTotalColumns, @columnsSeparator, @useTabletRules) when (@useTabletRules = true) {
    @media @from-tablet-portrait {
        // Tablet portrait
        .addColumnSet(@smartphoneViewportPrefix, @steps, @viewTotalColumns, @columnsSeparator);
        .addColumnSet(@hdViewportPrefix, @steps, @viewTotalColumns, @columnsSeparator);
        .addColumnSet(@tabletViewportPrefix, @steps, @viewTotalColumns, @columnsSeparator);
    }
}
.addColumnsSetHdReady(@steps, @hdViewportPrefix, @tabletViewportPrefix, @smartphoneViewportPrefix, @viewTotalColumns, @columnsSeparator, @useHdRules) when (@useHdRules = true) {
    @media @from-hd-ready {
        // HD Ready
        .addColumnSet(@smartphoneViewportPrefix, @steps, @viewTotalColumns, @columnsSeparator);
        .addColumnSet(@tabletViewportPrefix, @steps, @viewTotalColumns, @columnsSeparator);
        .addColumnSet(@hdViewportPrefix, @steps, @viewTotalColumns, @columnsSeparator);
    }
}



