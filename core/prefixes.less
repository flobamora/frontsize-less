/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==               CSS 3               ===================================================================================================================================
==           CROSS BROWSER           ===================================================================================================================================
==        COMAPTIBILITY MIXINS       ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/

/*
For more compatibility details:
http://caniuse.com/
*/

.transition(@transition:0.3s ease-in-out initial) {
	/*
	classic css transition style
	.transition(width .4s ease-in-out);
	.transition(color .4s ease-in-out);
	.transition(border-color .4s ease-in-out .2s);
	*/
	transition: @transition;
}.transition(@transition:0.3s ease-in-out initial) when (@use-css-prefix = true) {
	-webkit-transition: @transition;
	-khtml-transition: @transition;
	-moz-transition: @transition;
	-ms-transition: @transition;
	-o-transition: @transition;
}

.transition-delay(@delay:0.5s) {
	transition-delay: @delay;
}.transition-delay(@delay:0.5s) when (@use-css-prefix = true) {
	-webkit-transition: @delay;
	-khtml-transition: @delay;
	-moz-transition: @delay;
	-ms-transition: @delay;
	-o-transition: @delay;
}

.transition-duration(@duration:0.5s) {
	transition-duration: @duration;
}.transition-duration(@duration:0.5s) when (@use-css-prefix = true) {
	-webkit-transition-duration: @duration;
	-khtml-transition-duration: @duration;
	-moz-transition-duration: @duration;
	-ms-transition-duration: @duration;
	-o-transition-duration: @duration;
}

.transition-property(@property:all) {
	transition-property: @property;
}.transition-duration(@property:all) when (@use-css-prefix = true) {
	-webkit-transition-property: @property;
	-khtml-transition-property: @property;
	-moz-transition-property: @property;
	-ms-transition-property: @property;
	-o-transition-property: @property;
}.transition-property(@property:all) when (@use-css-prefix = true), (@property = transform) {
	-webkit-transition-property:-webkit-transform;
	-khtml-transition-property:-khtml-transform;
	-moz-transition-property:-moz-transform;
	-ms-transition-property:-ms-transform;
	-o-transition-property:-o-transform;
	transition-property:transform;
}

.transition-timing-function(@easing:ease-in-out) {
	transition-timing-function: @easing;
}.transition-timing-function(@easing:ease-in-out) when (@use-css-prefix = true) {
	-webkit-transition-timing-function: @easing;
	-khtml-transition-timing-function: @easing;
	-moz-transition-timing-function: @easing;
	-ms-transition-timing-function: @easing;
	-o-transition-timing-function: @easing;
}

.globalPlaceholder(@color:#999999, @focused:#CCCCCC) {
	// sets the color of the input text placeholder attribute
	:input-placeholder {
		color: @color;
	}
	input:focus:input-placeholder {
		color: @focused;
	}
}.globalPlaceholder(@color, @focused) when (@use-css-prefix = true) {
	::-webkit-input-placeholder {
		color: @color;
	}
	input:focus::-webkit-input-placeholder {
		color: @focused;
	}
	:-khtml-input-placeholder {
		color: @color;
	}
	input:focus:-khtml-input-placeholder {
		color: @focused;
	}
	:-moz-placeholder {
		color: @color;
	}
	input:focus:-moz-placeholder {
		color: @focused;
	}
	::-moz-placeholder {
		color: @color;
	}
	input:focus::-moz-placeholder {
		color: @focused;
	}
	:-ms-input-placeholder {
		color: @color;
	}
	input:focus:-ms-input-placeholder {
		color: @focused;
	}
	:-o-input-placeholder {
		color: @color;
	}
	input:focus:-o-input-placeholder {
		color: @focused;
	}
}

.input-placeholder(@color:#999999, @focused:#CCCCCC) {
	// sets the color of the input text placeholder attribute
	&:input-placeholder { color: @color; }
	&:focus:input-placeholder { color: @focused; }
}.input-placeholder(@color:#999999, @focused:#CCCCCC) when (@use-css-prefix = true) {
	&::-webkit-input-placeholder {
		color: @color;
	}
	&:focus::-webkit-input-placeholder {
		color: @focused;
	}
	&:-khtml-input-placeholder {
		color: @color;
	}
	&:focus:-khtml-input-placeholder {
		color: @focused;
	}
	&:-moz-placeholder {
		color: @color;
	}
	&:focus:-moz-placeholder {
		color: @focused;
	}
	&::-moz-placeholder {
		color: @color;
	}
	&:focus::-moz-placeholder {
		color: @focused;
	}
	&:-ms-input-placeholder {
		color: @color;
	}
	&:focus:-ms-input-placeholder {
		color: @focused;
	}
	&:-o-input-placeholder {
		color: @color;
	}
	&:focus:-o-input-placeholder {
		color: @focused;
	}
}

.globalSelection(@text-color:inherit, @background-color:inherit) {
	// Sets the color of the text selection area and the color of the text selected
	::selection {
		background: @background-color; color: @text-color;
	}
	img::selection {
		background: transparent;
	}
}.globalSelection(@text-color, @background-color) when (@use-css-prefix = true) {
	::-moz-selection {
		background: @background-color;
		color: @text-color;
	}
	img::-moz-selection	{
		background: transparent;
	}
	::-moz-focus-inner {
		border: 0;
	}
}

.selection(@text-color:inherit, @background-color:inherit) {
	// Sets the color of the text selection area and the color of the text selected
	&::selection {
		background: @background-color; 
		color: @text-color;
	}
}.selection(@text-color, @background-color) when (@use-css-prefix = true) {
	&::-moz-selection {
		background: @background-color;
		color: @text-color;
	}
	&::-moz-focus-inner {
		border: 0;
	}
}

.font-smoothing(@antialias:antialiased) {
	/*
	Sets the antialias text for the whole page
	Values: antialiased | subpixel-antialiased | none
	*/
	font-smoothing: @antialias;
}.font-smoothing(@antialias:antialiased) when (@use-css-prefix = true) {
	-webkit-font-smoothing: @antialias;
	-khtml-font-smoothing: @antialias;
	-moz-font-smoothing: @antialias;
	-ms-font-smoothing: @antialias;
	-o-font-smoothing: @antialias;
}

.column-count(@count:auto) {
	/*
	Url - http://www.w3schools.com/cssref/css3_pr_column-count.asp
	*/
	column-count: @count;
}.column-count(@count:auto) when (@use-css-prefix = true) {
	-webkit-column-count: @count;
	-khtml-column-count: @count;
	-moz-column-count: @count;
	-ms-column-count: @count;
	-o-column-count: @count;
}

.column-gap(@gap:normal) {
	/*
	Url - http://www.w3schools.com/cssref/css3_pr_column-gap.asp
	*/
	column-gap: @gap;
}.column-gap(@gap:normal) when (@use-css-prefix = true) {
	-webkit-column-gap: @gap;
	-khtml-column-gap: @gap;
	-moz-column-gap: @gap;
	-ms-column-gap: @gap;
	-o-column-gap: @gap;
}

.column-rule(@rule:medium none black) {
	/*
	Url - http://www.w3schools.com/cssref/css3_pr_column-rule.asp
	*/
	column-rule: @rule;
}.column-rule(@rule:medium none black) when (@use-css-prefix = true) {
	-webkit-column-rule: @rule;
	-khtml-column-rule: @rule;
	-moz-column-rule: @rule;
	-ms-column-rule: @rule;
	-o-column-rule: @rule;
}

.column-span(@span:1) {
	/*
	Url - http://www.w3schools.com/cssref/css3_pr_column-span.asp
	// The column-span property specifies how many columns an element should span across.
	The CSS column-span property allows content to span across multiple columns on a multi-column layout.
	This can be useful if you have a heading or other element within the multicol layout that needs to span across all columns.
	Values: 1 | none | all;
	*/
	column-span: @span;
}.column-span(@span:none) when (@use-css-prefix = true) {
	-webkit-column-span: @span;
	-khtml-column-span: @span;
	-moz-column-span: @span;
	-ms-column-span: @span;
	-o-column-span: @span;
}

.column-width(@rule:auto) {
	/*
	Url - http://www.w3schools.com/cssref/css3_pr_column-width.asp
	*/
	// The column-width property specifies the width of the columns.
	column-width: @rule;
}.column-width(@rule:auto) when (@use-css-prefix = true) {
	-webkit-column-width: @rule;
	-khtml-column-width: @rule;
	-moz-column-width: @rule;
	-ms-column-width: @rule;
	-o-column-width: @rule;
}

.columns(@columns:auto auto) {
	/*
	Url - http://www.w3schools.com/cssref/css3_pr_columns.asp
	*/
	// The columns property is a shorthand property for setting column-width and column-count.
	columns: @columns;
}.columns(@columns:auto auto) when (@use-css-prefix = true) {
	-webkit-columns: @columns;
	-khtml-columns: @columns;
	-moz-columns: @columns;
	-ms-columns: @columns;
	-o-columns: @columns;
}

.border-radius(@radius:6px) {
	// sets a radius to the angles of the element
	/*
	Default usage
	.border-radius(top-left-radius top-right-radius bottom-right-radius bottom-left-radius);
	.border-radius(4px);
	.border-radius(4px 6px 8px 10px);
	*/
	border-radius: @radius;
}.border-radius(@radius:6px) when (@use-css-prefix = true) {
	-webkit-border-radius: @radius;
	-khtml-border-radius: @radius;
	-moz-border-radius: @radius;
	-ms-border-radius: @radius;
	-o-border-radius: @radius;
}

.outline-radius(@radius:6px) {
	outline-radius: @radius;
}.outline-radius(@radius:6px) when (@use-css-prefix = true) {
	-webkit-outline-radius: @radius;
	-khtml-outline-radius: @radius;
	-moz-outline-radius: @radius;
	-ms-outline-radius: @radius;
	-o-outline-radius: @radius;
}

.border-image(@params) {
	// Specify an image as the border around an element
	/*
	Url - http://www.w3schools.com/cssref/css3_pr_border-image.asp
	*/
	/*
	Defaut usage
	.border-image(url(border.png) 30 30 round);
	*/
	border-image: @params;
}.border-image(@params) when (@use-css-prefix = true) {
	-webkit-border-image: @params;
	-khtml-border-image: @params;
	-moz-border-image: @params;
	-ms-border-image: @params;
	-o-border-image: @params;
}
.displayBox() {
	display:box;
}.displayBox() when (@use-css-prefix = true) {
	display:-webkit-box;
	display:-ms-flexbox;
	display:-khtml-box;
	display:-moz-box;
	display:-o-box;
}

.box-align(@align:stretch) {
	/*
	The box-align property specifies how to align the child elements of a box.
	Url - http://www.w3schools.com/cssref/css3_pr_box-align.asp
	Values: start | end | center | baseline | stretch
	*/
	box-align: @align;
}.box-align(@align:stretch) when (@use-css-prefix = true) {
	-webkit-box-align: @align;
	-khtml-box-align: @align;
	-moz-box-align: @align;
	-ms-box-align: @align;
	-o-box-align: @align;
}

.box-direction(@direction:normal) {
	/*
	The box-direction property specifies the direction in which child elements of a box element are laid out.
	Url - http://www.w3schools.com/cssref/css3_pr_box-direction.asp
	Values: normal | reverse | inherit
	*/
	box-direction: @direction;
}.box-direction(@direction:normal) when (@use-css-prefix = true) {
	-webkit-box-direction: @direction;
	-khtml-box-direction: @direction;
	-moz-box-direction: @direction;
	-ms-box-direction: @direction;
	-o-box-direction: @direction;
}

.box-flex(@flexibility:0.0) {
	/*
	The box-flex property specifies whether the child elements of a box is flexible or inflexible in size.
	Tip: Elements that are flexible can shrink or grow as the box shrinks and grows. Whenever there is extra space in a box, flexible elements are expanded to fill that space.
	Values: 0.0 | 0.5 | 1 | etc.
	
	Notice: The container element must have display property set to box as in the example above
	.container {
		.display-box();
		.children {
			.box-flex();
		}
	}
	*/
	box-flex: @flexibility;
}.box-flex(@flexibility:0.0) when (@use-css-prefix = true) {
	-webkit-box-flex: @flexibility;
	-khtml-box-flex: @flexibility;
	-moz-box-flex: @flexibility;
	-ms-box-flex: @flexibility;
	-o-box-flex: @flexibility;
}

.box-ordinal-group(@order:1) {
	/*
	Url - http://www.w3schools.com/cssref/css3_pr_box-ordinal-group.asp

	The box-ordinal-group property specifies the display order of the child elements of a box.
	Elements with a lower value are displayed before those with a higher value.
	Note: The display order of the elements with the same group value depend on their source order.
	Values: integers
	
	Notice: The container element must have display property set to box as in the example above
	.container {
		.display-box();
		.children-1 {
			.box-ordinal-group(2);
		}
		.children-2 {
			.box-ordinal-group(1);
		}
	}
	*/
	box-ordinal-group: @order;
}.box-ordinal-group(@order:1) when (@use-css-prefix = true) {
	-webkit-box-ordinal-group: @order;
	-khtml-box-ordinal-group: @order;
	-moz-box-ordinal-group: @order;
	-ms-box-ordinal-group: @order;
	-o-box-ordinal-group: @order;
	-ms-flex-order: @order;
}

.box-orient(@orient:inline-axis) {
	/*
	Url - http://www.w3schools.com/cssref/css3_pr_box-orient.asp

	The box-orient property specifies whether the children of a box should be laid out horizontally or vertically.
	Tip: Children within a horizontal box are displayed from left to right, and children within a vertical box are displayed top to bottom. However, the box-direction and box-ordinal-group properties can change this ordering.
	Values: horizontal | vertical | inline-axis | block-axis | inherit
	
	Notice: The container element must have display property set to box as in the example above
	.container {
		.display-box();
		.children-1 {
			.box-ordinal-group(2);
		}
		.children-2 {
			.box-ordinal-group(1);
		}
	}
	*/
	box-orient: @orient;
}.box-orient(@orient:inline-axis) when (@use-css-prefix = true) {
	-webkit-box-orient: @orient;
	-khtml-box-orient: @orient;
	-moz-box-orient: @orient;
	-ms-flex-orient: @orient;
	-ms-box-orient: @orient;
	-o-box-orient: @orient;
}

.box-pack(@pack) {
	/*
	Url - http://www.w3schools.com/cssref/css3_pr_box-pack.asp

	The box-pack property specifies where child elements of a box are placed when the box is larger than the size of the children.
	This property specifies the horizontal position in horizontal boxes, and the vertical position in vertical boxes.
	Values: start | end | center | justify
	
	Notice: The container element must have display property set to box as in the example above
	.container {
		.displayBox();
		.children-1 {
			.box-ordinal-group(2);
		}
		.children-2 {
			.box-ordinal-group(1);
		}
	}
	*/
	box-pack: @pack;
}.box-pack(@pack) when (@use-css-prefix = true) {
	-webkit-box-pack: @pack;
	-khtml-box-pack: @pack;
	-moz-box-pack: @pack;
	-ms-flex-pack: @pack;
	-ms-box-pack: @pack;
	-o-box-pack: @pack;
}

.box-sizing(@sizing:content-box) {
	/*
	Url - http://www.w3schools.com/cssref/css3_pr_box-sizing.asp
	
	The box-sizing property allows you to define certain elements to fit an area in a certain way.
	For example, if you want two bordered boxes side by side, it can be achieved through setting box-sizing to "border-box". This forces the browser to render the box with the specified width and height, and place the border and padding inside the box.
	Values: content-box | border-box | inherit
	*/
	box-sizing: @sizing;
}.box-sizing(@sizing:content-box) when (@use-css-prefix = true) {
	-webkit-box-sizing: @sizing;
	-khtml-box-sizing: @sizing;
	-moz-box-sizing: @sizing;
	-ms-box-sizing: @sizing;
	-o-box-sizing: @sizing;
}

.box-shadow(@params:0px 0px 1px rgba(0,0,0,.3)) {
	// sets the shadow of the element
	/*
	Default usage
	.box-shadow(x y blur [expand] color [inset]);
	.box-shadow(1px 2px 4px rgba(0,0,0,.3));
	.box-shadow(0px 2px 4px -1px rgba(0,0,0,.3), inset 0px 1px 4px rgba(255,255,255,.5););
	*/
	box-shadow: @params;
}.box-shadow(@params) when (@use-css-prefix = true) {
	-webkit-box-shadow: @params;
	-khtml-box-shadow: @params;
	-moz-box-shadow: @params;
	-ms-box-shadow: @params;
	-o-box-shadow: @params;
}

.transform(@transform:none) {
	/*
	The transform property applies a 2D or 3D transformation to an element. This property allows you to rotate, scale, move, skew, etc., elements.
	Possible values: none|transform-functions
	Url - http://www.w3schools.com/cssref/css3_pr_transform.asp
	*/
	transform: @transform;
}.transform(@transform:none) when (@use-css-prefix = true) {
	-webkit-transform: @transform;
	-khtml-transform: @transform;
	-moz-transform: @transform;
	-ms-transform: @transform;
	-o-transform: @transform;
}

// Url - http://www.w3schools.com/cssref/css3_pr_transform.asp
.matrix(@matrix6:0,0,0,0,0,0;) {
	.transform(matrix(@matrix6));
}
.matrix3d(@matrix16:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;) {
	.transform(matrix3d(@matrix16));
}
.translate(@coordinatesXY:0,0;) {
	.transform(translate(@coordinatesXY));
}
.translate3d(@coordinatesXYZ:0,0,0;) {
	.transform(translate3d(@coordinatesXYZ));
}
.translateX(@x:0) {
	.transform(translateX(@x));
}
.translateY(@x:0) {
	.transform(translateY(@y));
}
.translateZ(@x:0) {
	.transform(translateZ(@z));
}
.scale(@scale:0) {
	.transform(scale(@scale));
}
.scaleX(@scale:0) {
	.transform(scaleX(@scale));
}
.scaleY(@scale:0) {
	.transform(scaleY(@scale));
}
.scaleZ(@scale:0) {
	.transform(scaleZ(@scale));
}
.rotate(@angle:0) {
	.transform(rotate(@angle));
}
.rotateX(@angle:0) {
	.transform(rotateX(@angle));
}
.rotateY(@angle:0) {
	.transform(rotateY(@angle));
}
.rotateZ(@angle:0) {
	.transform(rotateZ(@angle));
}
.rotate3d(@rotation:0,0,0,0deg;) {
	// x, y, z, angle
	.transform(rotate3d(@rotation));
}
.skew(@angles:0deg,0deg) {
	.transform(skew(@angles));
}
.skewX(@angle:0deg) {
	.transform(skewX(@angle));
}
.skewY(@angle:0deg) {
	.transform(skewY(@angle));
}
.perspective(@perspective:0) {
	.transform(perspective(@perspective));
}

.filter(@filter) {
	filter: @filter;
}.filter(@filter) when (@use-css-prefix = true) {
	-webkit-filter: @filter;
	-khtml-filter: @filter;
	-moz-filter: @filter;
	-ms-filter: @filter;
	-o-filter: @filter;
}
.blur(@blur:0) {
	.filter(blur(@blur));
}

.backface-visibility(@visibility:visible) {
	/*
	The backface-visibility property defines whether or not an element should be visible when not facing the screen.
	This property is useful when an element is rotated, and you do not want to see its backside.
	Url - http://www.w3schools.com/cssref/css3_pr_backface-visibility.asp
	Values: visible | hidden
	*/
	backface-visibility: @visibility;
}.backface-visibility(@visibility:visible) when (@use-css-prefix = true) {
	-webkit-backface-visibility: @visibility;
	-khtml-backface-visibility: @visibility;
	-moz-backface-visibility: @visibility;
	-ms-backface-visibility: @visibility;
	-o-backface-visibility: @visibility;
}

.transform-style(@style:flat) {
	/*
	The transform-style property specifies how nested elements are rendered in 3D space.
	Url - http://www.w3schools.com/cssref/css3_pr_transform-style.asp
	Values: flat | preserve-3d
	*/
	transform-style: @style;
}.transform-style(@style:flat) when (@use-css-prefix = true) {
	-webkit-transform-style: @style;
	-khtml-transform-style: @style;
	-moz-transform-style: @style;
	-ms-transform-style: @style;
	-o-transform-style: @style;
}

.resize(@resize:none) {
	/*
	The resize property specifies whether or not an element is resizable by the user.
	Url - http://www.w3schools.com/cssref/css3_pr_resize.asp
	Values: none | both | horizontal | vertical
	*/
	resize: @resize;
	overflow: auto;
}.resize(@resize:none) when (@use-css-prefix = true) {
	-webkit-resize: @resize;
	-khtml-resize: @resize;
	-moz-resize: @resize;
	-ms-resize: @resize;
	-o-resize: @resize;
}

.hyphens(@hyphens:none) {
	/*
	Sets how to split words to improve the layout of paragraphs
	Url - http://www.w3schools.com/cssref/css3_pr_resize.asp
	Values: none | both | horizontal | vertical
	*/
	hyphens: @hyphens;
	word-wrap: break-word;
}.hyphens(@hyphens:none) when (@use-css-prefix = true) {
	-webkit-hyphens: @hyphens;
	-khtml-hyphens: @hyphens;
	-moz-hyphens: @hyphens;
	-ms-hyphens: @hyphens;
	-o-hyphens: @hyphens;
}

.image-resolution(@resolution:1dppx) {
	/*
	http://www.w3.org/TR/css3-images/#image-resolution
	Values: from-image | snap | dpi
	*/
	image-resolution:@resolution;
}.image-resolution(@resolution:1dppx) when (@use-css-prefix = true) {
	-webkit-image-resolution: @resolution;
	-khtml-image-resolution: @resolution;
	-moz-image-resolution: @resolution;
	-ms-image-resolution: @resolution;
	-o-image-resolution: @resolution;
}

.marks(@marks:none) {
	/*
	This property specifies what sort of marks should be rendered just outside the rendered page box.
	The characteristics and position of the marks will be browser dependent.
	Values: inherit | none | crop | cross | crop cross
	*/
	marks:@marks;
}.marks(@marks:none) when (@use-css-prefix = true) {
	-webkit-marks: @marks;
	-khtml-marks: @marks;
	-moz-marks: @marks;
	-ms-marks: @marks;
	-o-marks: @marks;
}

.appearance(@appearence:normal) {
	/*
	The appearance property allows you to make an element look like a standard user interface element.
	Url - http://css-tricks.com/almanac/properties/a/appearance/

	Webkit values: checkbox | radio | push-button | square-button | button | button-bevel | listbox | listitem | menulist | menulist-button | menulist-text | menulist-textfield | scrollbarbutton-up | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbartrack-horizontal | scrollbartrack-vertical | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbargripper-horizontal | scrollbargripper-vertical | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | caret | searchfield | searchfield-decoration | searchfield-results-decoration | searchfield-results-button | searchfield-cancel-button | textfield | textarea;
	Mozilla values: none | button | checkbox | checkbox-container | checkbox-small | dialog | listbox | menuitem | menulist | menulist-button | menulist-textfield | menupopup | progressbar | radio | radio-container | radio-small | resizer | scrollbar | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbartrack-horizontal | scrollbartrack-vertical | separator | statusbar | tab | tab-left-edge Obsolete | tabpanels | textfield | textfield-multiline | toolbar | toolbarbutton | toolbox | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communications-toolbox | -moz-win-glass | -moz-win-media-toolbox | tooltip | treeheadercell | treeheadersortarrow | treeitem | treetwisty | treetwistyopen | treeview | window;
	
	Code snippet:
	.appearance(button);
	*/
	appearance: @appearence;
}.appearance(@appearence:normal) when (@use-css-prefix = true) {
	-webkit-appearance: @appearence;
	-khtml-appearance: @appearence;
	-moz-appearance: @appearence;	// For now is not working for form elements radio and checkbox
	-ms-appearance: @appearence;
	-o-appearance: @appearence;
}

.linear-gradient(@gradient:top, #FFFFFF, #000000;) {
	background: linear-gradient(@gradient);
}.linear-gradient(@gradient:top, #FFFFFF, #000000;) when (@use-css-prefix = true) {
	background: -webkit-linear-gradient(@gradient);
	background: -khtml-linear-gradient(@gradient);
	background: -moz-linear-gradient(@gradient);
	background: -ms-linear-gradient(@gradient);
	background: -o-linear-gradient(@gradient);
}

.background-origin(@origin:padding-box) {
	/*
	The background-origin property specifies what the background-position property should be relative to.
	Url - http://www.w3schools.com/cssref/css3_pr_background-origin.asp
	Values: padding-box | border-box | content-box;
	Code snippet:
	.background-origin(border-box);
	*/
	background-origin: @origin;
}.background-origin(@origin:padding-box) when (@use-css-prefix = true) {
	-webkit-background-origin: @origin;
	-khtml-background-origin: @origin;
	-moz-background-origin: @origin;
	-ms-background-origin: @origin;
	-o-background-origin: @origin;
}

.background-clip(@clip:border-box) {
	/*
	The background-clip property specifies the painting area of the background.
	Url - http://www.w3schools.com/cssref/css3_pr_background-clip.asp
	Values: border-box | padding-box | content-box;
	Code snippet:
	.background-clip(border-box);
	*/
	background-clip: @clip;
}.background-clip(@clip:border-box) when (@use-css-prefix = true) {
	-webkit-background-clip: @clip;
	-khtml-background-clip: @clip;
	-moz-background-clip: @clip;
	-ms-background-clip: @clip;
	-o-background-clip: @clip;
}

.user-select(@select:auto) {
	/*
	it disables text selection
	Values: auto | none | text;
	*/
	user-select: @select;	       
}.user-select(@select:auto) when (@use-css-prefix = true) {
	-webkit-touch-callout: @select;
	-webkit-user-select: @select;
	-khtml-user-select: @select;
	-moz-user-select: @select;
	-ms-user-select: @select;
	-o-user-select: @select;
}

*[unselectable=on] {
	/*
	a fix to disable text selections if set
	
	Code snippet:
	<div unselectable="on">This text is not selectable</div>
	*/
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	-o-user-select: none;
	user-select: none;
}

.opacity(@opacity:1) {
	opacity:@opacity;
}.opacity(@opacity:1) when (@use-css-prefix = true) {
	-khtml-opacity: @opacity;
	-moz-opacity: @opacity;
	@msOpacity:(@opacity * 100);
	-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=@{msOpacity})";
	filter:~"alpha(opacity=@{msOpacity})";
}

.text-overflow(@overflow:ellipsis) {
	text-overflow: @overflow;
}.text-overflow(@overflow:ellipsis) when (@use-css-prefix = true) {
	-ms-text-overflow: @overflow;
}

.text-fill-color(@color:transparent) {
	text-fill-color: @color;
}.text-fill-color(@color:transparent) when (@use-css-prefix = true) {
	-webkit-text-fill-color: @color;
	-khtml-text-fill-color: @color;
	-moz-text-fill-color: @color;
	-ms-text-fill-color: @color;
	-o-text-fill-color: @color;
}

.text-stroke-color(@color:black) {
	text-stroke-color: @color;
}.text-stroke-color(@color:black) when (@use-css-prefix = true) {
	-webkit-text-stroke-color: @color;
	-khtml-text-stroke-color: @color;
	-moz-text-stroke-color: @color;
	-ms-text-stroke-color: @color;
	-o-text-stroke-color: @color;
}

.text-stroke-width(@width:1px) {
	text-stroke-width: @width;
}.text-stroke-width(@width:1px) when (@use-css-prefix = true) {
	-webkit-text-stroke-width: @width;
	-khtml-text-stroke-width: @width;
	-moz-text-stroke-width: @width;
	-ms-text-stroke-width: @width;
	-o-text-stroke-width: @width;
}

.text-stroke(@textStroke:1px black) {
	text-stroke: @textStroke;
}.text-stroke(@textStroke:1px black) when (@use-css-prefix = true) {
	-webkit-text-stroke: @textStroke;
	-khtml-text-stroke: @textStroke;
	-moz-text-stroke: @textStroke;
	-ms-text-stroke: @textStroke;
	-o-text-stroke: @textStroke;
}
