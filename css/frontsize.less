/**
Frontsize - Simple like make conversation.
Version: 1.1
Date: 2013-06-08
Author: Vittorio Vittori
Website: http://vittoriovittori.com
*/

/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==                                   ===================================================================================================================================
==        YOUR CONFIGURATION         ===================================================================================================================================
==                                   ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/
/**
Frontsize default values to override, change them in the way you like
*/

@font-default:'helvetica neue', helvetica, arial, sans-serif;
@font-h:'helvetica neue', helvetica, arial, sans-serif;

@horizontal-padding:1em;
@vertical-padding:1em;

// set the margins
.frontsize-steps();				// .frontsize-steps(200px, 100px, 50px, 0px);
.frontsize-steps-padding();

// set font scaling to change the font size depending by different resolutions
.frontsize-font-scaling();		// .frontsize-font-scaling (@hd-full, @hd-ready, @tablet-landscape, @tablet-portrait, @smartphone-landscape);
.frontsize-h-font-scaling();	// same config of .frontsize-font-scaling
// .font-smoothing();			// if you want to enable font smoothing (will be applied to webkit only)

// font sizes for h# elements 
@h1:   2em;
@h2: 1.5em;
@h3:   1em;
@h4: 0.9em;
@h5: 0.8em;
@h6:0.65em;

// set different width for the smartphones, tablets and hd resolutions
@smartphone-portrait-step:	320px;	// smartphones portrait		320~380
@smartphone-landscape-step:	480px;	// smartphones landscape	480~568~685
@tablet-portrait-step:	   	768px;	// tabled portrait			768
@tablet-landscape-step:	  	1024px;	// tabled landscape			1024
@hd-ready-step:			  	1280px;	// HD Ready					1280 (720p)
@hd-full-step:			  	1800px;	// Full HD					1920 (1080p)


/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==                                   ===================================================================================================================================
==      ADVANCED CONFIGURATION       ===================================================================================================================================
==                                   ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/

/**
Responsive columns behavior configuration
change the number a columns per row by setting this

For example, on tablet landscape 5 columns will be turned into 3 columns:
@media only screen and (max-width : (@hd-ready-step - 1px)) {
	.contain-5  > * { .set-columns(3); }
}
*/

// Media queries for selectors active from smaller resolution device mobile to a specific one
@media only screen and (min-width : @hd-full-step) {
	// Full HD
	// nothing to set here
}
@media only screen and (max-width : (@hd-full-step - 1px)) {
	// HD Ready
	// nothing to set here
}
@media only screen and (max-width : (@hd-ready-step - 1px)) {
	// Tablet landscape
	// .contain-2  > * { .set-columns(2); } // default
	// .contain-3  > * { .set-columns(3); } // default
	// .contain-4  > * { .set-columns(4); } // default
	.contain-5  > * { .set-columns(3); } // normal, from 5 columns to 3
	.contain-6  > * { .set-columns(3); } // normal, from 6 columns to 3
	.contain-8  > * { .set-columns(4); } // normal, from 8 columns to 4
	.contain-10 > * { .set-columns(5); } // narrow, from 5 columns to 5
	.contain-12 > * { .set-columns(6); } // narrow, from 5 columns to 6
	.contain-16 > * { .set-columns(8); } // narrow, from 5 columns to 8
}
@media only screen and (max-width : (@tablet-landscape-step - 1px)) {
	// Tablet portrait
	// .contain-2  > * { .set-columns(2); } // default
	// .contain-3  > * { .set-columns(3); } // default
	.contain-4  > * { .set-columns(2); } // wide, from 4 columns to 2
	.contain-5  > * { .set-columns(3); } // normal, from 5 columns to 3
	.contain-6  > * { .set-columns(3); } // normal, from 6 columns to 3
	.contain-8  > * { .set-columns(4); } // normal, from 8 columns to 4
	.contain-10 > * { .set-columns(5); } // narrow, from 10 columns to 5
	.contain-12 > * { .set-columns(6); } // narrow, from 12 columns to 6
	.contain-16 > * { .set-columns(4); } // narrow, from 16 columns to 4
}
@media only screen and (max-width : (@tablet-portrait-step - 1px)) {
	// Smartphone landscape
	// .contain-2  > * { .set-columns(2); } // default
	.contain-3  > * { .set-columns(2); } // wide, from 3 columns to 2
	.contain-4  > * { .set-columns(2); } // wide, from 4 columns to 2
	.contain-5  > * { .set-columns(2); } // normal, from 5 columns to 2
	.contain-6  > * { .set-columns(2); } // normal, from 6 columns to 2
	.contain-8  > * { .set-columns(2); } // normal, from 8 columns to 2
	.contain-10 > * { .set-columns(3); } // narrow, from 10 columns to 3
	.contain-12 > * { .set-columns(3); } // narrow, from 12 columns to 3
	.contain-16 > * { .set-columns(3); } // narrow, from 16 columns to 3
}
@media only screen and (max-width : (@smartphone-landscape-step - 1px)) {
	// Smartphone portrait
	.contain-2  > * { .set-columns(1); } // wide, from 2 columns to 1
	.contain-3  > * { .set-columns(1); } // wide, from 3 columns to 1
	.contain-4  > * { .set-columns(1); } // wide, from 4 columns to 1
	.contain-5  > * { .set-columns(1); } // normal, from 5 columns to 1
	.contain-6  > * { .set-columns(1); } // normal, from 6 columns to 1
	.contain-8  > * { .set-columns(1); } // normal, from 8 columns to 1
	.contain-10 > * { .set-columns(2); } // narrow, from 10 columns to 2
	.contain-12 > * { .set-columns(2); } // narrow, from 12 columns to 2
	.contain-16 > * { .set-columns(2); } // narrow, from 16 columns to 2
}

/**
HERE ENDS YOUR CONFIGURATION
*/

/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==                                   ===================================================================================================================================
==             FRONTSIZE             ===================================================================================================================================
==                                   ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/

/**
Frontsize global setting mixins
*/

.frontsize-steps(@hd-full-margin:500px, @hd-ready-margin:100px, @tablet-landscape-margin:50px, @tablet-portrait-margin:0px) {
	// Media queries for selectors active from a specific resolution or higher
	@media only screen and (min-width : 1px) {
		// Smartphone portrait
	}
	@media only screen and (min-width : @smartphone-landscape-step) {
		// Smartphone landscape

	}
	@media only screen and (min-width : @tablet-portrait-step) {
		// Tablet portrait
		.use-steps { max-width:(@tablet-portrait-step - @tablet-portrait-margin); }
	}
	@media only screen and (min-width : @tablet-landscape-step) {
		// Tablet landscape
		.use-steps { max-width:(@tablet-landscape-step - @tablet-landscape-margin); }
	}
	@media only screen and (min-width : @hd-ready-step) {
		// HD Ready
		.use-steps { max-width:(@hd-ready-step - @hd-ready-margin); }
	}
	@media only screen and (min-width : @hd-full-step) {
		// Full HD
		.use-steps { max-width:(@hd-full-step - @hd-full-margin); }
	}
}

.frontsize-steps-padding(@hd-full:3em, @hd-ready:3em, @tablet-landscape:2em, @tablet-portrait:2em, @smartphone-landscape:1em, @smartphone-portrait:1em) {
	// Media queries for selectors active from a specific resolution or higher
	@media only screen and (min-width : 1px) {
		// Smartphone portrait
		.set-step-padding(@smartphone-portrait);
	}
	@media only screen and (min-width : @smartphone-landscape-step) {
		// Smartphone landscape
		.set-step-padding(@smartphone-landscape);
	}
	@media only screen and (min-width : @tablet-portrait-step) {
		// Tablet portrait
		.set-step-padding(@tablet-portrait);
	}
	@media only screen and (min-width : @tablet-landscape-step) {
		// Tablet landscape
		.set-step-padding(@tablet-landscape);
	}
	@media only screen and (min-width : @hd-ready-step) {
		// HD Ready
		.set-step-padding(@hd-ready);
	}
	@media only screen and (min-width : @hd-full-step) {
		// Full HD
		.set-step-padding(@hd-full);
	}
}

.frontsize-font-scaling(@hd-full:1.5em, @hd-ready:1.25em, @tablet-landscape:1em, @tablet-portrait:1em, @smartphone-landscape:1em, @smartphone-portrait:1em) {
	// Media queries for selectors active from a specific resolution or higher
	@media only screen and (min-width : 1px) {
		// Smartphone portrait
		body { font-size:@smartphone-portrait; .with-small-fonts { font-size:.75em; }}
	}
	@media only screen and (min-width : @smartphone-landscape-step) {
		// Smartphone landscape
		body { font-size:@smartphone-landscape; .with-small-fonts { font-size:.75em; }}
	}
	@media only screen and (min-width : @tablet-portrait-step) {
		// Tablet portrait
		body { font-size:@tablet-portrait; .with-small-fonts { font-size:.75em; }}
	}
	@media only screen and (min-width : @tablet-landscape-step) {
		// Tablet landscape
		body { font-size:@tablet-landscape; .with-small-fonts { font-size:.75em; }}
	}
	@media only screen and (min-width : @hd-ready-step) {
		// HD Ready
		body { font-size:@hd-ready; .with-small-fonts { font-size:.75em; }}
	}
	@media only screen and (min-width : @hd-full-step) {
		// Full HD
		body { font-size:@hd-full; .with-small-fonts { font-size:.75em; }}
	}
}

.frontsize-h-font-scaling(@hd-full:1.5em, @hd-ready:1.25em, @tablet-landscape:1.125em, @tablet-portrait:1.125em, @smartphone-landscape:1em, @smartphone-portrait:1em) {
	// Media queries for selectors active from a specific resolution or higher
	
	@media only screen and (min-width : 1px) {
		// Smartphone portrait
		h1 { font-size: unit(@h1*@smartphone-portrait,em); }
		h2 { font-size: unit(@h2*@smartphone-portrait,em); }
		h3 { font-size: unit(@h3*@smartphone-portrait,em); }
		h4 { font-size: unit(@h4*@smartphone-portrait,em); }
		h5 { font-size: unit(@h5*@smartphone-portrait,em); }
		h6 { font-size: unit(@h6*@smartphone-portrait,em); }
		h1, h2, h3, h4, h5, h6 { margin-bottom:unit(@smartphone-portrait/4,em); }
	}
	@media only screen and (min-width : @smartphone-landscape-step) {
		// Smartphone landscape
		h1 { font-size: unit(@h1*@smartphone-landscape,em); }
		h2 { font-size: unit(@h2*@smartphone-landscape,em); }
		h3 { font-size: unit(@h3*@smartphone-landscape,em); }
		h4 { font-size: unit(@h4*@smartphone-landscape,em); }
		h5 { font-size: unit(@h5*@smartphone-landscape,em); }
		h6 { font-size: unit(@h6*@smartphone-landscape,em); }
		h1, h2, h3, h4, h5, h6 { margin-bottom:unit(@smartphone-landscape/4,em); }
	}
	@media only screen and (min-width : @tablet-portrait-step) {
		// Tablet portrait
		h1 { font-size: unit(@h1*@tablet-portrait,em); }
		h2 { font-size: unit(@h2*@tablet-portrait,em); }
		h3 { font-size: unit(@h3*@tablet-portrait,em); }
		h4 { font-size: unit(@h4*@tablet-portrait,em); }
		h5 { font-size: unit(@h5*@tablet-portrait,em); }
		h6 { font-size: unit(@h6*@tablet-portrait,em); }
		h1, h2, h3, h4, h5, h6 { margin-bottom:unit(@tablet-portrait/4,em); }
	}
	@media only screen and (min-width : @tablet-landscape-step) {
		// Tablet landscape
		h1 { font-size: unit(@h1*@tablet-landscape,em); }
		h2 { font-size: unit(@h2*@tablet-landscape,em); }
		h3 { font-size: unit(@h3*@tablet-landscape,em); }
		h4 { font-size: unit(@h4*@tablet-landscape,em); }
		h5 { font-size: unit(@h5*@tablet-landscape,em); }
		h6 { font-size: unit(@h6*@tablet-landscape,em); }
		h1, h2, h3, h4, h5, h6 { margin-bottom:unit(@tablet-landscape/4,em); }
	}
	@media only screen and (min-width : @hd-ready-step) {
		// HD Ready
		h1 { font-size: unit(@h1*@hd-ready,em); }
		h2 { font-size: unit(@h2*@hd-ready,em); }
		h3 { font-size: unit(@h3*@hd-ready,em); }
		h4 { font-size: unit(@h4*@hd-ready,em); }
		h5 { font-size: unit(@h5*@hd-ready,em); }
		h6 { font-size: unit(@h6*@hd-ready,em); }
		h1, h2, h3, h4, h5, h6 { margin-bottom:unit(@hd-full/4,em); }
	}
	@media only screen and (min-width : @hd-full-step) {
		// Full HD
		h1 { font-size: unit(@h1*@hd-full,em); }
		h2 { font-size: unit(@h2*@hd-full,em); }
		h3 { font-size: unit(@h3*@hd-full,em); }
		h4 { font-size: unit(@h4*@hd-full,em); }
		h5 { font-size: unit(@h5*@hd-full,em); }
		h6 { font-size: unit(@h6*@hd-full,em); }
		h1, h2, h3, h4, h5, h6 { margin-bottom:unit(@hd-full/4,em); }
	}
}
.columns * {
	.wrap;
}
.columns {
	padding-top:@vertical-padding;
}
.columns > * {
	padding-bottom:@vertical-padding;
}
.columns > *, .full,
.wide-1-of-16, .wide-2-of-16, .wide-3-of-16, .wide-4-of-16, .wide-5-of-16, .wide-6-of-16, .wide-7-of-16, .wide-8-of-16, .wide-9-of-16, .wide-10-of-16, .wide-11-of-16, .wide-12-of-16, .wide-13-of-16, .wide-14-of-16, .wide-15-of-16, .wide-16-of-16,
.wide-1-of-12, .wide-2-of-12, .wide-3-of-12, .wide-4-of-12, .wide-5-of-12, .wide-6-of-12, .wide-7-of-12, .wide-8-of-12, .wide-9-of-12, .wide-10-of-12, .wide-11-of-12, .wide-12-of-12,
.wide-1-of-10, .wide-2-of-10, .wide-3-of-10, .wide-4-of-10, .wide-5-of-10, .wide-6-of-10, .wide-7-of-10, .wide-8-of-10, .wide-9-of-10, .wide-10-of-10,
.wide-1-of-8, .wide-2-of-8, .wide-3-of-8, .wide-4-of-8, .wide-5-of-8, .wide-6-of-8, .wide-7-of-8, .wide-8-of-8,
.wide-1-of-6, .wide-2-of-6, .wide-3-of-6, .wide-4-of-6, .wide-5-of-6, .wide-6-of-6,
.wide-1-of-5, .wide-2-of-5, .wide-3-of-5, .wide-4-of-5, .wide-5-of-5,
.wide-1-of-4, .wide-2-of-4, .wide-3-of-4, .wide-4-of-4,
.wide-1-of-3, .wide-2-of-3, .wide-3-of-3,
.wide-1-of-2, .wide-2-of-2 {
	padding-left:@horizontal-padding;
	padding-right:@horizontal-padding;
	float: left;
	position: relative; // just to help who like to use some absolute element inside without need to assign position relative to all Frontsize selectors
	.wrap;
}

/*
Frontsize frontend framework
Sizing rules and APIs
*/

.contain-2  > * { .set-column-step(1,2); }
.contain-3  > * { .set-column-step(1,3); }
.contain-4  > * { .set-column-step(1,4); }
.contain-5  > * { .set-column-step(1,5); }
.contain-6  > * { .set-column-step(1,6); }
.contain-8  > * { .set-column-step(1,8); }
.contain-10 > * { .set-column-step(1,10); }
.contain-12 > * { .set-column-step(1,12); }
.contain-16 > * { .set-column-step(1,16); }

// to change the default rule of elements width balance to a more specific one
.columns >  *.wide-1-of-16,  .wide-1-of-16 { .set-column-step(1,16); }
.columns >  *.wide-2-of-16,  .wide-2-of-16 { .set-column-step(2,16); }
.columns >  *.wide-3-of-16,  .wide-3-of-16 { .set-column-step(3,16); }
.columns >  *.wide-4-of-16,  .wide-4-of-16 { .set-column-step(4,16); }
.columns >  *.wide-5-of-16,  .wide-5-of-16 { .set-column-step(5,16); }
.columns >  *.wide-6-of-16,  .wide-6-of-16 { .set-column-step(6,16); }
.columns >  *.wide-7-of-16,  .wide-7-of-16 { .set-column-step(7,16); }
.columns >  *.wide-8-of-16,  .wide-8-of-16 { .set-column-step(8,16); }
.columns >  *.wide-9-of-16,  .wide-9-of-16 { .set-column-step(9,16); }
.columns > *.wide-10-of-16, .wide-10-of-16 { .set-column-step(10,16);}
.columns > *.wide-11-of-16, .wide-11-of-16 { .set-column-step(11,16);}
.columns > *.wide-12-of-16, .wide-12-of-16 { .set-column-step(12,16);}
.columns > *.wide-13-of-16, .wide-13-of-16 { .set-column-step(13,16);}
.columns > *.wide-14-of-16, .wide-14-of-16 { .set-column-step(14,16);}
.columns > *.wide-15-of-16, .wide-15-of-16 { .set-column-step(15,16);}
.columns > *.wide-16-of-16, .wide-16-of-16 { .set-column-step(16,16);}

.columns >  *.wide-1-of-12,  .wide-1-of-12 { .set-column-step(1,12); }
.columns >  *.wide-2-of-12,  .wide-2-of-12 { .set-column-step(2,12); }
.columns >  *.wide-3-of-12,  .wide-3-of-12 { .set-column-step(3,12); }
.columns >  *.wide-4-of-12,  .wide-4-of-12 { .set-column-step(4,12); }
.columns >  *.wide-5-of-12,  .wide-5-of-12 { .set-column-step(5,12); }
.columns >  *.wide-6-of-12,  .wide-6-of-12 { .set-column-step(6,12); }
.columns >  *.wide-7-of-12,  .wide-7-of-12 { .set-column-step(7,12); }
.columns >  *.wide-8-of-12,  .wide-8-of-12 { .set-column-step(8,12); }
.columns >  *.wide-9-of-12,  .wide-9-of-12 { .set-column-step(9,12); }
.columns > *.wide-10-of-12, .wide-10-of-12 { .set-column-step(10,12);}
.columns > *.wide-11-of-12, .wide-11-of-12 { .set-column-step(11,12);}
.columns > *.wide-12-of-12, .wide-12-of-12 { .set-column-step(12,12);}

.columns >  *.wide-1-of-10,  .wide-1-of-10 { .set-column-step(1,10); }
.columns >  *.wide-2-of-10,  .wide-2-of-10 { .set-column-step(2,10); }
.columns >  *.wide-3-of-10,  .wide-3-of-10 { .set-column-step(3,10); }
.columns >  *.wide-4-of-10,  .wide-4-of-10 { .set-column-step(4,10); }
.columns >  *.wide-5-of-10,  .wide-5-of-10 { .set-column-step(5,10); }
.columns >  *.wide-6-of-10,  .wide-6-of-10 { .set-column-step(6,10); }
.columns >  *.wide-7-of-10,  .wide-7-of-10 { .set-column-step(7,10); }
.columns >  *.wide-8-of-10,  .wide-8-of-10 { .set-column-step(8,10); }
.columns >  *.wide-9-of-10,  .wide-9-of-10 { .set-column-step(9,10); }
.columns > *.wide-10-of-10, .wide-10-of-10 { .set-column-step(10,10);}

.columns > *.wide-1-of-8, .wide-1-of-8 { .set-column-step(1,8);}
.columns > *.wide-2-of-8, .wide-2-of-8 { .set-column-step(2,8);}
.columns > *.wide-3-of-8, .wide-3-of-8 { .set-column-step(3,8);}
.columns > *.wide-4-of-8, .wide-4-of-8 { .set-column-step(4,8);}
.columns > *.wide-5-of-8, .wide-5-of-8 { .set-column-step(5,8);}
.columns > *.wide-6-of-8, .wide-6-of-8 { .set-column-step(6,8);}
.columns > *.wide-7-of-8, .wide-7-of-8 { .set-column-step(7,8);}
.columns > *.wide-8-of-8, .wide-8-of-8 { .set-column-step(8,8);}

.columns > *.wide-1-of-6, .wide-1-of-6 { .set-column-step(1,6);}
.columns > *.wide-2-of-6, .wide-2-of-6 { .set-column-step(2,6);}
.columns > *.wide-3-of-6, .wide-3-of-6 { .set-column-step(3,6);}
.columns > *.wide-4-of-6, .wide-4-of-6 { .set-column-step(4,6);}
.columns > *.wide-5-of-6, .wide-5-of-6 { .set-column-step(5,6);}
.columns > *.wide-6-of-6, .wide-6-of-6 { .set-column-step(6,6);}

.columns > *.wide-1-of-5, .wide-1-of-5 { .set-column-step(1,5); }
.columns > *.wide-2-of-5, .wide-2-of-5 { .set-column-step(2,5); }
.columns > *.wide-3-of-5, .wide-3-of-5 { .set-column-step(3,5); }
.columns > *.wide-4-of-5, .wide-4-of-5 { .set-column-step(4,5); }
.columns > *.wide-5-of-5, .wide-5-of-5 { .set-column-step(5,5); }

.columns > *.wide-1-of-4, .wide-1-of-4 { .set-column-step(1,4); }
.columns > *.wide-2-of-4, .wide-2-of-4 { .set-column-step(2,4); }
.columns > *.wide-3-of-4, .wide-3-of-4 { .set-column-step(3,4); }
.columns > *.wide-4-of-4, .wide-4-of-4 { .set-column-step(4,4); }

.columns > *.wide-1-of-3, .wide-1-of-3 { .set-column-step(1,3);}
.columns > *.wide-2-of-3, .wide-2-of-3 { .set-column-step(2,3);}
.columns > *.wide-3-of-3, .wide-3-of-3 { .set-column-step(3,3);}

.columns > *.wide-1-of-2, .wide-1-of-2 { .set-column-step(1,2);}
.columns > *.wide-2-of-2, .wide-2-of-2 { .set-column-step(2,2);}

// to be sure to go on the next row 
.contain-2  > *:nth-child(2n+1)  { clear:both; }
.contain-3  > *:nth-child(3n+1)  { clear:both; }
.contain-4  > *:nth-child(4n+1)  { clear:both; }
.contain-5  > *:nth-child(5n+1)  { clear:both; }
.contain-6  > *:nth-child(6n+1)  { clear:both; }
.contain-8  > *:nth-child(8n+1)  { clear:both; }
.contain-10 > *:nth-child(10n+1) { clear:both; }
.contain-12 > *:nth-child(12n+1) { clear:both; }
.contain-16 > *:nth-child(16n+1) { clear:both; }



/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==                                   ===================================================================================================================================
==        FRONTSIZE SELECTORS        ===================================================================================================================================
==                                   ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/


.use-steps {
	// center the steps container
	margin: auto;
	.wrap;
}
.columns {
	// be sure to contain the floated elements contained with my height
	width:100%;
	overflow: auto;
	.wrap;
}
.wrap {
	// avoid the unwanted width over the 100% of the size of the container
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	-o-box-sizing: border-box;
	box-sizing: border-box;
}
.full {
	// manually occupy all this row
	width:100%;
}
.centered {
	// manually center all the contents inside
	text-align: center;
}
.to-right {
	// manually center all the contents inside
	text-align: right;
}
.clear {
	// manually go down to the next row
	clear:both;
}
.opposite-paged {
	// the first child will have text-align to left and the last child will have text-align to right
	> * {
		&:first-child {
			text-align: left;
		}
		&:last-child {
			text-align: right;
		}
	} 
}

.with-padding {
	padding:@vertical-padding @horizontal-padding;
}
.with-horizontal-padding {
	padding-right: @horizontal-padding;
	padding-left: @horizontal-padding;
}
.with-vertical-padding {
	padding-top: @vertical-padding;
	padding-bottom: @vertical-padding;
}
.no-padding {
	padding:0;
}
.without-padding {
	// no padding for me and my children only
	padding:0;
	.without-padding-to-children;
}
.without-padding-to-children {
	// no padding for my children only
	> * {
		padding:0;
	}
}
.without-padding-to-grandchildrens {
	// no padding for my children's children only
	> * > * {
		padding:0;
	}
}
.without-padding-to-all {
	// no padding for everything inside on every level
	> *, > * * {
		padding:0;
	}
}
.fluid {
	// make an image responsive
	width: 100%;
	height: auto;
}
.not-fluid {
	// set an image with it's default behavior
	width: auto;
	height: auto;
}
.fluid-all {
	// make all images responsive
	img {
		width: 100%;
		height: auto;
	}
}

/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==             FRONTSIZE             ===================================================================================================================================
==           NORMALIZATION           ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/
/**
CSS normalization and responsive settings for Frontsize
*/

* {
	margin:0;
	padding:0;
}

body {
	font-family: @font-default;
}

h1, h2, h3, h4, h5, h6 {
	font-family: @font-h;
}

nav {
	ul {
		list-style-type: none;
	}
}

label { display: inline-block; .wrap; }
textarea,
button,
input[type="text"],
input[type="reset"],
input[type="button"],
input[type="submit"],
input[type="password"] {
	.wrap;
}
img { -ms-interpolation-mode: bicubic; }
a img { border:none; }


/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==             FRONTSIZE             ===================================================================================================================================
==          VISIBILITY RULES         ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/
// Media queries for strict resolution selectors
@media	only screen
		and (min-width : @hd-full-step) {
	// Full HD
	//.only-on-hd-full				{background-color:pink; padding:.25em;}
	.only-on-hd-ready				{display:none;}
	.only-on-tablet-landscape		{display:none;}
	.only-on-tablet-portrait		{display:none;}
	.only-on-smartphone-landscape	{display:none;}
	.only-on-smartphone-portrait	{display:none;}
}

@media	only screen
		and (min-width : @hd-ready-step)
		and (max-width : (@hd-full-step - 1px)) {
	// HD Ready
	.only-on-hd-full				{display:none;}
	//.only-on-hd-ready				{background-color:aqua; padding:.25em;}
	.only-on-tablet-landscape		{display:none;}
	.only-on-tablet-portrait		{display:none;}
	.only-on-smartphone-landscape	{display:none;}
	.only-on-smartphone-portrait	{display:none;}
}

@media	only screen
		and (min-width : @tablet-landscape-step)
		and (max-width : (@hd-ready-step - 1px)) {
	// Tablet landscape
	.only-on-hd-full				{display:none;}
	.only-on-hd-ready				{display:none;}
	//.only-on-tablet-landscape		{background-color:yellow; padding:.25em;}
	.only-on-tablet-portrait		{display:none;}
	.only-on-smartphone-landscape	{display:none;}
	.only-on-smartphone-portrait	{display:none;}
}

@media	only screen
		and (min-width : @tablet-portrait-step)
		and (max-width : (@tablet-landscape-step - 1px)) {
	// Tablet portrait
	.only-on-hd-full				{display:none;}
	.only-on-hd-ready				{display:none;}
	.only-on-tablet-landscape		{display:none;}
	//.only-on-tablet-portrait		{background-color:orange; padding:.25em;}
	.only-on-smartphone-landscape	{display:none;}
	.only-on-smartphone-portrait	{display:none;}
}

@media	only screen
		and (min-width : @smartphone-landscape-step)
		and (max-width : (@tablet-portrait-step - 1px)) {
	// Smartphone landscape
	.only-on-hd-full				{display:none;}
	.only-on-hd-ready				{display:none;}
	.only-on-tablet-landscape		{display:none;}
	.only-on-tablet-portrait		{display:none;}
	//.only-on-smartphone-landscape	{background-color:lightgrey; padding:.25em;}
	.only-on-smartphone-portrait	{display:none;}
}

@media	only screen
		and (min-width : 1px)
		and (max-width : (@smartphone-landscape-step - 1px)) {
	// Smartphone portrait
	.only-on-hd-full				{display:none;}
	.only-on-hd-ready				{display:none;}
	.only-on-tablet-landscape		{display:none;}
	.only-on-tablet-portrait		{display:none;}
	.only-on-smartphone-landscape	{display:none;}
	//.only-on-smartphone-portrait	{background-color:lightblue; padding:.25em;}
}

/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==             FRONTSIZE             ===================================================================================================================================
==        MOBILE FIRST RULES         ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/

// Media queries for selectors active from smaller resolution device mobile to a specific one
@media only screen and (min-width : @hd-full-step) {
	// Full HD
	.not-from-hd-full { display:none; }
	.full-from-hd-full { width:100% !important; }
	.full-from-hd-full > * { width:100% !important; }
}
@media only screen and (max-width : (@hd-full-step - 1px)) {
	// HD Ready
	.not-from-hd-ready { display:none; }
	.full-from-hd-ready { width:100% !important; }
	.full-from-hd-ready > * { width:100% !important; }
}
@media only screen and (max-width : (@hd-ready-step - 1px)) {
	// Tablet landscape
	.not-from-tablet-landscape { display:none; }
	.full-from-tablet-landscape { width:100% !important; }
	.full-from-tablet-landscape > * { width:100% !important; }
}
@media only screen and (max-width : (@tablet-landscape-step - 1px)) {
	// Tablet portrait
	.not-from-tablet-portrait { display:none; }
	.full-from-tablet-portrait { width:100% !important; }
	.full-from-tablet-portrait > * { width:100% !important; }
}
@media only screen and (max-width : (@tablet-portrait-step - 1px)) {
	// Smartphone landscape
	.not-from-smartphone-landscape { display:none; }
	.full-from-smartphone-landscape { width:100% !important; }
	.full-from-smartphone-landscape > * { width:100% !important; }
}
@media only screen and (max-width : (@smartphone-landscape-step - 1px)) {
	// Smartphone portrait
	.not-from-smartphone-portrait { display:none; }
	.full-from-smartphone-portrait { width:100% !important; }
	.full-from-smartphone-portrait > * { width:100% !important; }
	.paginated-away {
		// the first child will have text-align to left and the last child will have text-align to right
		> * {
			&:last-child {
				text-align: left;
			}
		} 
	}
	nav a { display:block; width:100%; clear:both; }
}

// Media queries for selectors active from the smaller resolution to a specific one
@media only screen and (min-width : @hd-full-step) {
	// Full HD
	.not-to-hd-full { display:none; position: fixed; }
}
@media only screen and (max-width : (@hd-full-step - 1px)) {
	// HD Ready
	.not-to-hd-ready { display:none; position: fixed; }
}
@media only screen and (max-width : (@hd-ready-step - 1px)) {
	// Tablet landscape
	.not-to-tablet-landscape { display:none; position: fixed; }
}
@media only screen and (max-width : (@tablet-landscape-step - 1px)) {
	// Tablet portrait
	.not-to-tablet-portrait { display:none; position: fixed; }
}
@media only screen and (max-width : (@tablet-portrait-step - 1px)) {
	// Smartphone landscape
	.not-to-smartphone-landscape { display:none; position: fixed; }
}
@media only screen and (max-width : (@smartphone-landscape-step - 1px)) {
	// Smartphone portrait
	.not-to-smartphone-portrait { display:none; position: fixed; }
}

/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==             FRONTSIZE             ===================================================================================================================================
==             INTERNAL              ===================================================================================================================================
==              MIXINS               ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/

/**
Frontsize internal mixins to extend with new columns
*/
.set-columns(@columns) {
	width:(100%/@columns) !important;
	&:nth-child(2n+1) {clear:none;} 
	&:nth-child(3n+1) {clear:none;} 
	&:nth-child(4n+1) {clear:none;} 
	&:nth-child(5n+1) {clear:none;} 
	&:nth-child(6n+1) {clear:none;} 
	&:nth-child(8n+1) {clear:none;} 
	&:nth-child(10n+1){clear:none;} 
	&:nth-child(12n+1){clear:none;} 
	&:nth-child(16n+1){clear:none;} 
	&:nth-child(@{columns}n+1) {clear:both;}
}
.set-column-step(@step, @columns) {
	width:((100% * @step)/@columns);
}
.set-step-padding(@step) {
	.with-steps-padding { padding:@step !important; }
	.with-horizontal-steps-padding { padding-left:@step !important; padding-right:@step !important; }
	.with-vertical-steps-padding { padding-top:@step !important; padding-bottom:@step !important; }
}

/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==               CSS 3               ===================================================================================================================================
==           CROSS BROWSER           ===================================================================================================================================
==        COMAPTIBILITY MIXINS       ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/

/**
Frontsize Mixin Widgets
*/

.transition(@transition:.3s ease-in-out initial) {
	/*
	classic css transition style
	.transition(width .4s ease-in-out);
	.transition(color .4s ease-in-out);
	.transition(border-color .4s ease-in-out .2s);
	*/
	.ease;
	-webkit-transition:@transition;
	-moz-transition:@transition;
	-o-transition:@transition;
	transition:@transition;
}
.transition-delay(@delay:.5s) {
	-webkit-transition-delay:@delay;
	-moz-transition-delay:@delay;
	-o-transition-delay:@delay;
	transition-delay:@delay;
}
.transition-duration(@duration:.5s) {
	-webkit-transition-duration:@duration;
	-moz-transition-duration:@duration;
	-o-transition-duration:@duration;
	transition-duration:@duration;
}
.transition-property(@property:all) {
	-webkit-transition-property:@property;
	-moz-transition-property:@property;
	-o-transition-property:@property;
	transition-property:@property;
}
.ease(@easing:ease-in-out) {
	-moz-transition-timing-function:@easing;
	-webkit-transition-timing-function:@easing;
	-o-transition-timing-function:@easing;
	transition-timing-function:@easing;
}
.input-placeholder(@color:#999999, @focused:#CCCCCC) {
	// sets the color of the input text placeholder attribute
	::-webkit-input-placeholder { color:@color; }
	input:focus::-webkit-input-placeholder { color:@focused; }

	:-moz-placeholder { color:@color; }
	input:focus:-moz-placeholder { color:@focused; }
	::-moz-placeholder { color:@color; }
	input:focus::-moz-placeholder { color:@focused; }

	:-ms-input-placeholder { color:@color; }
	input:focus:-ms-input-placeholder { color:@focused; }
}
.font-smoothing(@antialias:antialiased) {
	// sets the antialias text for the whole page
	// @antialias: antialiased | subpixel-antialiased | none
	body {
		-webkit-font-smoothing: @antialias;
	}
}
.column-count(@count:auto) {
	// http://www.w3schools.com/cssref/css3_pr_column-count.asp
	column-count:@count;
	-o-column-count:@count;
	-moz-column-count:@count;
	-webkit-column-count:@count;
}
.column-gap(@gap:normal) {
	// http://www.w3schools.com/cssref/css3_pr_column-gap.asp
	column-gap:@gap;
	-o-column-gap:@gap;
	-moz-column-gap:@gap;
	-webkit-column-gap:@gap;
}
.column-rule(@rule:medium none black) {
	// http://www.w3schools.com/cssref/css3_pr_column-rule.asp
	column-rule:@rule;
	-o-column-rule:@rule;
	-moz-column-rule:@rule;
	-webkit-column-rule:@rule;
}
.column-span(@span:1) {
	// http://www.w3schools.com/cssref/css3_pr_column-span.asp
	// The column-span property specifies how many columns an element should span across.
	// 1 | all
	column-span:@span;
	-o-column-span:@span;
	-moz-column-span:@span;
	-webkit-column-span:@span;
}
.column-width(@rule:auto) {
	// http://www.w3schools.com/cssref/css3_pr_column-width.asp
	// The column-width property specifies the width of the columns.
	column-width:@rule;
	-o-column-width:@rule;
	-moz-column-width:@rule;
	-webkit-column-width:@rule;
}
.columns(@columns:auto auto) {
	// http://www.w3schools.com/cssref/css3_pr_columns.asp
	// The columns property is a shorthand property for setting column-width and column-count.
	columns:@columns;
	-o-columns:@columns;
	-moz-columns:@columns;
	-webkit-columns:@columns;
}
.round(@radius:6px) {
	// sets a radius to the angles of the element
	/*
	Default usage
	.round(top-left-radius top-right-radius bottom-right-radius bottom-left-radius);
	.round(4px);
	.round(4px 6px 8px 10px);
	*/
	border-radius: @radius;
	-o-border-radius: @radius;
	-moz-border-radius: @radius;
	-webkit-border-radius: @radius;
}
.round-top(@radius:6px) {
	// sets the top radius of the element
	/*
	Default usage
	.round-top(top-radius-only);
	.round-top(4px);
	*/
	.round(@radius @radius 0px 0px);
}
.round-bottom(@radius:6px) {
	// sets the bottom radius of the element
	/*
	Default usage
	.round-bottom(bottom-radius-only);
	.round-bottom(4px);
	*/
	.round(0px 0px @radius @radius);
}
.round-left(@radius:6px) {
	// sets the left radius of the element
	/*
	Default usage
	.round-left(left-radius-only);
	.round-left(4px);
	*/
	.round(@radius 0px 0px @radius);
}
.round-right(@radius:6px) {
	// sets the right radius of the element
	/*
	Default usage
	.round-right(right-radius-only);
	.round-right(4px);
	*/
	.round(0px @radius @radius 0px);
}
.box-shadow(@params:0px 0px 1px rgba(0,0,0,.3)) {
	// sets the shadow of the element
	/*
	Default usage
	.shadow(x y blur [expand] color [inset]);
	.shadow(1px 2px 4px rgba(0,0,0,.3));
	
	For complex shadows pass a less @var
	@var: 0px 2px 4px -1px rgba(0,0,0,.3), inset 0px 1px 4px rgba(255,255,255,.5);
	.shadow(@var);
	*/
	box-shadow:@params;
	-o-box-shadow:@params;
	-moz-box-shadow:@params;
	-webkit-box-shadow:@params;
}
.transform(@transform:none) {
	/*
	The transform property applies a 2D or 3D transformation to an element. This property allows you to rotate, scale, move, skew, etc., elements.
	Possible values: none|transform-functions
	http://www.w3schools.com/cssref/css3_pr_transform.asp
	*/
	transform:@transform;
	-o-transform:@transform;
	-ms-transform:@transform;
	-moz-transform:@transform;
	-webkit-transform:@transform;
}
// http://www.w3schools.com/cssref/css3_pr_transform.asp
.skew(@degrees:0deg) {
	.transform(skew(@degrees));
}
.matrix(@matrix6:0,0,0,0,0,0;) {
	.transform(matrix(@matrix6));
}
.matrix3d(@matrix16:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;) {
	.transform(matrix3d(@matrix16));
}
.translate(@coordinatesXY:0,0;) {
	.transform(translate(@coordinatesXY));
}
.translate3d(@coordinatesXYZ:0,0,0;) {
	.transform(translate3d(@coordinatesXYZ));
}
.translateX(@x:0) {
	.transform(translateX(@x));
}
.translateY(@x:0) {
	.transform(translateY(@y));
}
.translateZ(@x:0) {
	.transform(translateZ(@z));
}
.scale(@scale:0) {
	.transform(scale(@scale));
}
.scaleX(@scale:0) {
	.transform(scaleX(@scale));
}
.scaleY(@scale:0) {
	.transform(scaleY(@scale));
}
.scaleZ(@scale:0) {
	.transform(scaleZ(@scale));
}
.rotate(@angle:0) {
	.transform(rotate(@angle));
}
.rotateX(@angle:0) {
	.transform(rotateX(@angle));
}
.rotateY(@angle:0) {
	.transform(rotateY(@angle));
}
.rotateZ(@angle:0) {
	.transform(rotateZ(@angle));
}
.rotate3d(@rotation:0,0,0,0deg;) {
	// x, y, z, angle
	.transform(rotate3d(@rotation));
}
.skew(@angles:0,0) {
	.transform(skew(@angles));
}
.skewX(@angle:0) {
	.transform(skewX(@angle));
}
.skewY(@angle:0) {
	.transform(skewY(@angle));
}
.perspective(@perspective:0) {
	.transform(perspective(@perspective));
}
.appearance(@appearence:normal) {
	/*
	The appearance property allows you to make an element look like a standard user interface element.
	Possible values: normal|icon|window|button|menu|field
	http://www.w3schools.com/cssref/css3_pr_appearance.asp
	
	Default usage:
	.appearance(button);
	*/
	appearance:@appearence;
	-moz-appearance:@appearence;
	-webkit-appearance:@appearence;
}
.linear-gradient(@gradient:top, #FFFFFF, #000000;) {
	background: linear-gradient(@gradient);
	background: -o-linear-gradient(@gradient);
	background: -ms-linear-gradient(@gradient);
	background: -moz-linear-gradient(@gradient);
	background: -webkit-linear-gradient(@gradient);
}

/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==             FRONTSIZE             ===================================================================================================================================
==             MIXINS                ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/


/**
Frontsize extended methods
*/

.animate(@duration: .3s, @property: all, @easing: ease-in-out, @delay: initial) {
	-moz-transition-delay:@delay;
	-moz-transition-duration:@duration;
	-moz-transition-property:@property;
	
	-webkit-transition-delay:@delay;
	-webkit-transition-duration:@duration;
	-webkit-transition-property:@property;
	
	-o-transition-delay:@delay;
	-o-transition-duration:@duration;
	-o-transition-property:@property;
	
	transition-delay:@delay;
	transition-duration:@duration;
	transition-property:@property;

	.ease(@easing);
}
// Easing effects
.ease-in-quad		{.ease(cubic-bezier(0.550, 0.085, 0.680, 0.530));}
.ease-in-cubic		{.ease(cubic-bezier(0.550, 0.055, 0.675, 0.190));}
.ease-in-quart		{.ease(cubic-bezier(0.895, 0.030, 0.685, 0.220));}
.ease-in-quint		{.ease(cubic-bezier(0.755, 0.050, 0.855, 0.060));}
.ease-in-sine		{.ease(cubic-bezier(0.470, 0.000, 0.745, 0.715));}
.ease-in-expo		{.ease(cubic-bezier(0.950, 0.050, 0.795, 0.035));}
.ease-in-circ		{.ease(cubic-bezier(0.600, 0.040, 0.980, 0.335));}
.ease-in-back		{.ease(cubic-bezier(0.600,-0.280, 0.735, 0.045));}
.ease-out-quad		{.ease(cubic-bezier(0.250, 0.460, 0.450, 0.940));}
.ease-out-cubic		{.ease(cubic-bezier(0.215, 0.610, 0.355, 1.000));}
.ease-out-quart		{.ease(cubic-bezier(0.165, 0.840, 0.440, 1.000));}
.ease-out-quint		{.ease(cubic-bezier(0.230, 1.000, 0.320, 1.000));}
.ease-out-sine		{.ease(cubic-bezier(0.390, 0.575, 0.565, 1.000));}
.ease-out-expo		{.ease(cubic-bezier(0.190, 1.000, 0.220, 1.000));}
.ease-out-circ		{.ease(cubic-bezier(0.075, 0.820, 0.165, 1.000));}
.ease-out-back		{.ease(cubic-bezier(0.175, 0.885, 0.320, 1.275));}
.ease-in-out-quad	{.ease(cubic-bezier(0.455, 0.030, 0.515, 0.955));}
.ease-in-out-cubic	{.ease(cubic-bezier(0.645, 0.045, 0.355, 1.000));}
.ease-in-out-quart	{.ease(cubic-bezier(0.770, 0.000, 0.175, 1.000));}
.ease-in-out-quint	{.ease(cubic-bezier(0.860, 0.000, 0.070, 1.000));}
.ease-in-out-sine	{.ease(cubic-bezier(0.445, 0.050, 0.550, 0.950));}
.ease-in-out-expo	{.ease(cubic-bezier(1.000, 0.000, 0.000, 1.000));}
.ease-in-out-circ	{.ease(cubic-bezier(0.785, 0.135, 0.150, 0.860));}
.ease-in-out-back	{.ease(cubic-bezier(0.680,-0.550, 0.265, 1.550));}

.shadow(@shadow:0px 0px 1px rgba(0,0,0,.3)) {
	.box-shadow(@shadow);
}
.vertical-gradient(@color:#cbcbcb, @strenght:5%) {
	/*
	Remember to put the ; after a list of comma separated params to group them:
	.method(1,2,3;); => .method(@params) {...}

	If the method expect a list of params you don't need it:
	.method(1,2,3); => .method(@param-1, @param-2, @param-3) {...}
	*/
	.linear-gradient(top, saturate(lighten(@color,@strenght),(-@strenght/2)) 0%, saturate(darken(@color,@strenght),(@strenght/2))100%;);
}
.gloss-gradient(@top: rgb(200,200,200), @middle: rgb(100,100,100), @bottom: rgb(150,150,150)) {
	.linear-gradient(bottom, @top 0%, @middle 50%, @bottom 100%;);
}
.background-retina(@default-image, @retina-image) {
	/*
	.background-retina("path/image-low-res.png", "path/image-high-res.png");
	*/
	background-image:url('@{default-image}');
	@media
	only screen and (-webkit-min-device-pixel-ratio: 2) and (aspect-ratio:2),
	only screen and (-webkit-min-device-pixel-ratio: 2),
	only screen and (   min--moz-device-pixel-ratio: 2),
	only screen and (     -o-min-device-pixel-ratio: 2/1),
	only screen and (        min-device-pixel-ratio: 2) {
		background-image:url('@{retina-image}');
	}
}

.background-responsive(@hd-full-bg, @hd-ready-bg, @tablet-landscape-bg, @tablet-portrait-bg, @smartphone-landscape-bg, @smartphone-portrait-bg) {
	/*
	.background-responsive(
		"path/hd-full/background.png",
		"path/hd-ready/background.png",
		"path/tablet-landscape/background.png",
		"path/tablet-portrait/background.png",
		"path/smartphone-landscape/background.png",
		"path/smartphone-portrait/background.png"
	);
	*/
	.background-hd-full(@hd-full-bg);
	.background-hd-ready(@hd-ready-bg);
	.background-tablet-landscape(@tablet-landscape-bg);
	.background-tablet-portrait(@tablet-portrait-bg);
	.background-smartphone-landscape(@smartphone-landscape-bg);
	.background-smartphone-portrait(@smartphone-portrait-bg);
}
.background-hd-full(@hd-full-bg) {
	@media only screen and (min-width : @hd-full-step) {
		// Full HD
		background-image:url('@{hd-full-bg}');
	}
}
.background-hd-ready(@hd-ready-bg) {
	@media only screen and (min-width : @hd-ready-step) {
		// HD Ready
		background-image:url('@{hd-ready-bg}');
	}
}
.background-tablet-landscape(@tablet-landscape-bg) {
	@media only screen and (min-width : @tablet-landscape-step) {
		// Tablet landscape
		background-image:url('@{tablet-landscape-bg}');
	}
}
.background-tablet-portrait(@tablet-portrait-bg) {
	@media only screen and (min-width : @tablet-portrait-step) {
		// Tablet portrait
		background-image:url('@{tablet-portrait-bg}');
	}
}
.background-smartphone-landscape(@smartphone-landscape-bg) {
	@media only screen and (min-width : @smartphone-landscape-step) {
		// Smartphone landscape
		background-image:url('@{smartphone-landscape-bg}');
	}
}
.background-smartphone-portrait(@smartphone-portrait-bg) {
	@media only screen and (min-width : 1px) {
		// Smartphone portrait
		background-image:url('@{smartphone-portrait-bg}');
	}
}
.sprite(@image, @coordinates) {
	background-image:url("@{image}");
	background-repeat:no-repeat;
	background-position:@coordinates;
}
.sprite(@image, @coordinates, @hover-coordinates) {
	background-image:url("@{image}");
	background-repeat:no-repeat;
	background-position:@coordinates;
	&:hover {
		background-position:@hover-coordinates;
	}
}
// text effects
.scale-font-size(@hd-full:1em, @hd-ready:1em, @tablet-landscape:1em, @tablet-portrait:1em, @smartphone-landscape:1em, @smartphone-portrait:1em) {
	// Media queries for selectors active from the smaller resolution to a specific one
	@media only screen and (min-width : @hd-full-step) {
		// Full HD
		font-size:@hd-full !important;
	}
	@media only screen and (max-width : (@hd-full-step - 1px)) {
		// HD Ready
		font-size:@hd-ready !important;
	}
	@media only screen and (max-width : (@hd-ready-step - 1px)) {
		// Tablet landscape
		font-size:@tablet-landscape !important;
	}
	@media only screen and (max-width : (@tablet-landscape-step - 1px)) {
		// Tablet portrait
		font-size:@tablet-portrait !important;
	}
	@media only screen and (max-width : (@tablet-portrait-step - 1px)) {
		// Smartphone landscape
		font-size:@smartphone-landscape !important;
	}
	@media only screen and (max-width : (@smartphone-landscape-step - 1px)) {
		// Smartphone portrait
		font-size:@smartphone-portrait !important;
	}
}
.hide-text-overflow(@overflow:ellipsis) {
	text-overflow: @overflow;
	overflow: hidden;
}
.text-buried(@color:black, @light:rgba(255,255,255,.05), @offset:1px) {
	/*
	<div alt="Text Buried">Text Buried</div>
	*/
	display: inline-block;
	color: @color;
	position: relative;
	text-shadow:none;
	&:before, &:after {
		content: attr(alt);
		color: @light;
		position: absolute;
	}
	&:before {
		top:@offset;
		left:@offset;
	}
	&:after {
		top:@offset;
		left:@offset;
	}
}

/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==                                   ===================================================================================================================================
==             WIDGETS               ===================================================================================================================================
==                                   ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/

/**
Frontsize style widgets, thanks to LESS
For more information on how to write one, go to http://lesscss.org
*/

.hooked(@z-index:auto) {
	position:fixed;
	width:100%;
	left:0px;
	z-index:auto;
	&.to-top {
		top:0px;
	}
	&.to-bottom {
		bottom:0px;
	}
}
.hooked { .hooked; }

.keyboard(@color:#393634, @text:white) {
	/*
	<div class="keyboard">cmd</div>
	*/
	padding:.5em .75em;
	display: inline-block;
	position: relative;
	cursor:default;

	color:@text;
	text-align: center;
	text-decoration: none;
	text-shadow:1px 1px 1px rgba(0,0,0,.2);
	
	border:1px solid @color;
	border-top:1px solid lighten(@color,10%);
	border-bottom:4px solid darken(@color,20%);
	
	.round(6px);
	.vertical-gradient(@color,-5%);
	.box-shadow(0px 3px 4px -2px rgba(0,0,0,.3));

	&:active {
		top:2px;
		margin-bottom:2px;
		border-bottom-width:2px;
	}
}
.keyboard { .keyboard; }
a.keyboard {cursor: pointer;}

.vintage-keyboard(@color:#423f38, @text:white) {
	/*
	<div class="vintage-keyboard">cmd</div>
	*/
	padding:.5em .75em;
	display: inline-block;
	position: relative;
	cursor:default;

	color:@text;
	text-align: center;
	text-decoration: none;
	text-shadow:1px 1px 1px rgba(0,0,0,.2);
	
	border:8px solid @color;
	border-top:4px solid lighten(@color,10%);
	border-bottom:14px solid darken(@color,20%);
	
	.round(12px);
	.vertical-gradient(@color,-5%);
	.box-shadow(0px 3px 4px -2px rgba(0,0,0,.3));

	&:active {
		top:6px;
		margin-bottom:6px;
		border-bottom-width:8px;
	}
}
.vintage-keyboard {.vintage-keyboard;}
a.vintage-keyboard {cursor: pointer;}

.commodore-keyboard(@color:#cecbba, @text:#423f38) {
	/*
	<div class="commodore-keyboard">cmd</div>
	*/
	padding:.5em .75em;
	display: inline-block;
	position: relative;
	cursor:default;
	
	color:@text;
	text-align: center;
	text-decoration: none;
	text-shadow:1px 1px 0px rgba(255,255,255,.75);
	
	border:8px solid @color;
	border-top:4px solid lighten(@color,10%);
	border-bottom:14px solid darken(@color,20%);
	
	.round(12px);
	.vertical-gradient(@color, -8%);
	.box-shadow(0px 3px 4px -2px rgba(0,0,0,.3));

	&:active {
		top:6px;
		margin-bottom:6px;
		border-bottom-width:8px;
	}
}
.commodore-keyboard {.commodore-keyboard;}
a.commodore-keyboard {cursor: pointer;}

.switch(@round:6px, @padding:1px, @margin:2.5em, @on-color:#1ba6da, @off-color:#dc3151) {
	
	@duration:.2s;
	@animation:ease-out;
	padding:@padding;
	
	background-color: rgb(245,245,245);
	border:1px solid rgba(0,0,0,.15);
	.round(@round);
	.shadow(inset 0px 1px 4px rgba(0,0,0,.2));
	
	> * {
		display: inline-block;
		padding:.5em;
		.warp;
		min-width:@margin;

		color:white;
		text-shadow:1px 1px 1px rgba(0,0,0,.3);
		text-align:center;
		
		cursor: pointer;
		background-color: white;
		.transition(margin-right @duration @animation, margin-left @duration @animation;);
		.shadow(0px 0px 1px rgba(0,0,0,.3));
		.round(unit(@round - @padding, px));
		
		&.on {
			margin-right:@margin;
			margin-left:0;
			@on-color:#1ba6da;
			.v-gradient(@on-color);
			border:1px solid darken(@on-color,5%);
			border-top-color:lighten(@on-color,10%);
			border-bottom-color:darken(@on-color,10%);
		}

		&.off {
			margin-right:0;
			margin-left:@margin;
			@off-color:#dc3151;
			.v-gradient(@off-color);
			border:1px solid darken(@off-color,5%);
			border-top-color:lighten(@off-color,5%);
			border-bottom-color:darken(@off-color,10%);
		}
	}
}
.switch { .switch; }

/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==                                   ===================================================================================================================================
==            YOUR THEME             ===================================================================================================================================
==                                   ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/

/*
POSSIBLE TROUBLESHOOTINGS

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

For background images PATH you have two main choices

Easiest, but static, it requires to change the path if you move the site path:
@img: "http://site.com/img/";
body {
	background-image: url("@{img}melamine-wood-004.png");
}

Hardesst, but dynamic, you set the img path from the javascript configuration in the html page file:
HTML page
<script type="text/javascript">
	// put this code before loading less JavaScript
	less = {
		rootpath: "<?php echo $webroot; ?>img/" // a path to add on to the start of every url resource
	}
</script>
<script type="text/javascript" src="js/less-1.4.0-beta.min.js"></script>

Frontsize LESS file
body {
	background-image: url("melamine-wood-004.png");
}

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

Remember to put the ; after a list of comma separated params to group them:
.method(1,2,3;); => .method(@params) {...}

If the method expect a list of params you don't need it:
.method(1,2,3); => .method(@param-1, @param-2, @param-3) {...}
*/

// Style your media query's theme here, this is the recommended type

/*
========================================================================================================================================================================
==                                   ===================================================================================================================================
==       YOUR THEME CUSTOMIZABLE     ===================================================================================================================================
==            MEDIA QUERIES          ===================================================================================================================================
==               RULES               ===================================================================================================================================
==                                   ===================================================================================================================================
========================================================================================================================================================================
*/

// For a faster develop you skip these Media queries rules, Frontsize should be enough to do the job.

/* Add a slash "/" to the beginning of this line if you want to use these media queries rules
// Media queries for selectors active from the smaller resolution to a specific one
// RECOMMENDED for Mobile first develop
@media only screen and (min-width : @hd-full-step) {
	// Full HD
}
@media only screen and (max-width : (@hd-full-step - 1px)) {
	// HD Ready
}
@media only screen and (max-width : (@hd-ready-step - 1px)) {
	// Tablet landscape
}
@media only screen and (max-width : (@tablet-landscape-step - 1px)) {
	// Tablet portrait
}
@media only screen and (max-width : (@tablet-portrait-step - 1px)) {
	// Smartphone landscape
}
@media only screen and (max-width : (@smartphone-landscape-step - 1px)) {
	// Smartphone portrait
}

// Media queries for selectors active from a specific resolution or higher
// RECOMMENDED for Mobile first develop
@media only screen and (min-width : 1px) {
	// Smartphone portrait
}
@media only screen and (min-width : @smartphone-landscape-step) {
	// Smartphone landscape
}
@media only screen and (min-width : @tablet-portrait-step) {
	// Tablet portrait
}
@media only screen and (min-width : @tablet-landscape-step) {
	// Tablet landscape
}
@media only screen and (min-width : @hd-ready-step) {
	// HD Ready
}
@media only screen and (min-width : @hd-full-step) {
	// Full HD
}

// Media queries for strict resolution range selectors
// NOT RECOMMENDED for Mobile first develop
@media	only screen
		and (min-width : @hd-full-step) {
	// Full HD
}

@media	only screen
		and (min-width : @hd-ready-step)
		and (max-width : (@hd-full-step - 1px)) {
	// HD Ready
}

@media	only screen
		and (min-width : @tablet-landscape-step)
		and (max-width : (@hd-ready-step - 1px)) {
	// Tablet landscape
}

@media	only screen
		and (min-width : @tablet-portrait-step)
		and (max-width : (@tablet-landscape-step - 1px)) {
	// Tablet portrait
}

@media	only screen
		and (min-width : @smartphone-landscape-step)
		and (max-width : (@tablet-portrait-step - 1px)) {
	// Smartphone landscape
}

@media	only screen
		and (min-width : 1px)
		and (max-width : (@smartphone-landscape-step + 1px)) {
	// Smartphone portrait
}
//*/ // End of media queries rules




